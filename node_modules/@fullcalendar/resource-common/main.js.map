{"version":3,"file":"main.js","sources":["src/EventDragging.ts","src/View.ts","src/ResourceEventConfigAdder.ts","src/structs/resource-source-def.ts","src/structs/resource-source-parse.ts","src/reducers/resourceSource.ts","src/structs/resource.ts","src/reducers/resourceStore.ts","src/reducers/resourceEntityExpansions.ts","src/reducers/resources.ts","src/structs/event-parse.ts","src/DateSelecting.ts","src/api/ResourceApi.ts","src/api/CalendarApi-extend.ts","src/common/ResourceSplitter.ts","src/validation.ts","src/ExternalElementDragging.ts","src/api/EventApi-extend.ts","src/option-change-handlers.ts","src/resources-crud.ts","src/options.ts","src/resource-sources/resource-array.ts","src/resource-sources/resource-func.ts","src/resource-sources/resource-json-feed.ts","src/common/ResourceLabelRoot.tsx","src/common/ResourceCell.tsx","src/common/ResourceDayHeader.tsx","src/common/ResourceIndex.ts","src/common/AbstractResourceDayTableModel.tsx","src/common/ResourceDayTableModel.ts","src/common/DayResourceTableModel.ts","src/common/VResourceJoiner.ts","src/common/VResourceSplitter.ts","src/common/resource-hierarchy.ts","src/main.ts"],"sourcesContent":["import { EventMutation, Hit, EventDef, CalendarContext, EventDropArg } from '@fullcalendar/common'\n\nexport function massageEventDragMutation(eventMutation: EventMutation, hit0: Hit, hit1: Hit) {\n  let resource0 = hit0.dateSpan.resourceId\n  let resource1 = hit1.dateSpan.resourceId\n\n  if (\n    resource0 && resource1 &&\n    resource0 !== resource1\n  ) {\n    eventMutation.resourceMutation = {\n      matchResourceId: resource0,\n      setResourceId: resource1,\n    }\n  }\n}\n\n/*\nTODO: all this would be much easier if we were using a hash!\n*/\nexport function applyEventDefMutation(eventDef: EventDef, mutation: EventMutation, context: CalendarContext) {\n  let resourceMutation = mutation.resourceMutation\n\n  if (resourceMutation && computeResourceEditable(eventDef, context)) {\n    let index = eventDef.resourceIds.indexOf(resourceMutation.matchResourceId)\n\n    if (index !== -1) {\n      let resourceIds = eventDef.resourceIds.slice() // copy\n\n      resourceIds.splice(index, 1) // remove\n\n      if (resourceIds.indexOf(resourceMutation.setResourceId) === -1) { // not already in there\n        resourceIds.push(resourceMutation.setResourceId) // add\n      }\n\n      eventDef.resourceIds = resourceIds\n    }\n  }\n}\n\n/*\nHACK\nTODO: use EventUi system instead of this\n*/\nexport function computeResourceEditable(eventDef: EventDef, context: CalendarContext): boolean {\n  let { resourceEditable } = eventDef\n\n  if (resourceEditable == null) {\n    let source = eventDef.sourceId && context.getCurrentData().eventSources[eventDef.sourceId]\n\n    if (source) {\n      resourceEditable = source.extendedProps.resourceEditable // used the Source::extendedProps hack\n    }\n\n    if (resourceEditable == null) {\n      resourceEditable = context.options.eventResourceEditable\n\n      if (resourceEditable == null) {\n        resourceEditable = context.options.editable // TODO: use defaults system instead\n      }\n    }\n  }\n\n  return resourceEditable\n}\n\nexport function transformEventDrop(mutation: EventMutation, context: CalendarContext): Partial<EventDropArg> {\n  let { resourceMutation } = mutation\n\n  if (resourceMutation) {\n    let { calendarApi } = context\n\n    return {\n      oldResource: calendarApi.getResourceById(resourceMutation.matchResourceId),\n      newResource: calendarApi.getResourceById(resourceMutation.setResourceId),\n    }\n  }\n\n  return {\n    oldResource: null,\n    newResource: null,\n  }\n}\n","import {\n  rangesIntersect, EventInstanceHash, filterHash, ViewProps, ViewPropsTransformer, CalendarContentProps, memoize,\n  EventUi, EventDefHash, EventDef, EventStore, DateRange, CalendarContext,\n} from '@fullcalendar/common'\nimport { __assign } from 'tslib'\nimport { ResourceHash } from './structs/resource'\nimport { ResourceEntityExpansions } from './reducers/resourceEntityExpansions'\nimport { computeResourceEditable } from './EventDragging'\n\n// for when resource views need resource data\n\nexport interface ResourceViewProps extends ViewProps {\n  resourceStore: ResourceHash\n  resourceEntityExpansions: ResourceEntityExpansions\n}\n\nexport class ResourceDataAdder implements ViewPropsTransformer {\n  filterResources = memoize(filterResources)\n\n  transform(viewProps: ViewProps, calendarProps: CalendarContentProps) {\n    if (calendarProps.viewSpec.optionDefaults.needsResourceData) {\n      return {\n        resourceStore: this.filterResources(\n          calendarProps.resourceStore,\n          calendarProps.options.filterResourcesWithEvents,\n          calendarProps.eventStore,\n          calendarProps.dateProfile.activeRange,\n        ),\n        resourceEntityExpansions: calendarProps.resourceEntityExpansions,\n      }\n    }\n    return null\n  }\n}\n\nfunction filterResources(\n  resourceStore: ResourceHash,\n  doFilterResourcesWithEvents: boolean,\n  eventStore: EventStore,\n  activeRange: DateRange,\n): ResourceHash {\n  if (doFilterResourcesWithEvents) {\n    let instancesInRange = filterEventInstancesInRange(eventStore.instances, activeRange)\n    let hasEvents = computeHasEvents(instancesInRange, eventStore.defs)\n\n    __assign(hasEvents, computeAncestorHasEvents(hasEvents, resourceStore))\n\n    return filterHash(resourceStore, (resource, resourceId) => hasEvents[resourceId])\n  }\n\n  return resourceStore\n}\n\nfunction filterEventInstancesInRange(eventInstances: EventInstanceHash, activeRange: DateRange) {\n  return filterHash(eventInstances, (eventInstance) => rangesIntersect(eventInstance.range, activeRange))\n}\n\nfunction computeHasEvents(eventInstances: EventInstanceHash, eventDefs: EventDefHash) {\n  let hasEvents = {}\n\n  for (let instanceId in eventInstances) {\n    let instance = eventInstances[instanceId]\n\n    for (let resourceId of eventDefs[instance.defId].resourceIds) {\n      hasEvents[resourceId] = true\n    }\n  }\n\n  return hasEvents\n}\n\n/*\nmark resources as having events if any of their ancestors have them\nNOTE: resourceStore might not have all the resources that hasEvents{} has keyed\n*/\nfunction computeAncestorHasEvents(hasEvents: { [resourceId: string]: boolean }, resourceStore: ResourceHash) {\n  let res = {}\n\n  for (let resourceId in hasEvents) {\n    let resource\n\n    while ((resource = resourceStore[resourceId])) {\n      resourceId = resource.parentId // now functioning as the parentId\n\n      if (resourceId) {\n        res[resourceId] = true\n      } else {\n        break\n      }\n    }\n  }\n\n  return res\n}\n\n/*\nfor making sure events that have editable resources are always draggable in resource views\n*/\nexport function transformIsDraggable(val: boolean, eventDef: EventDef, eventUi: EventUi, context: CalendarContext) {\n  if (!val) {\n    let state = context.getCurrentData()\n    let viewSpec = state.viewSpecs[state.currentViewType]\n\n    if (viewSpec.optionDefaults.needsResourceData) {\n      if (computeResourceEditable(eventDef, context)) {\n        return true\n      }\n    }\n  }\n\n  return val\n}\n","import {\n  ViewProps, ViewPropsTransformer, CalendarContentProps, memoize, mapHash,\n  EventUi, isPropsEqual, EventUiHash, EventDefHash, EventDef, combineEventUis,\n} from '@fullcalendar/common'\nimport { __assign } from 'tslib'\nimport { ResourceHash } from './structs/resource'\n\n// for when non-resource view should be given EventUi info (for event coloring/constraints based off of resource data)\n\nexport class ResourceEventConfigAdder implements ViewPropsTransformer {\n  buildResourceEventUis = memoize(buildResourceEventUis, isPropsEqual)\n  injectResourceEventUis = memoize(injectResourceEventUis)\n\n  transform(viewProps: ViewProps, calendarProps: CalendarContentProps) {\n    if (!calendarProps.viewSpec.optionDefaults.needsResourceData) {\n      return {\n        eventUiBases: this.injectResourceEventUis(\n          viewProps.eventUiBases,\n          viewProps.eventStore.defs,\n          this.buildResourceEventUis(calendarProps.resourceStore),\n        ),\n      }\n    }\n    return null\n  }\n}\n\nfunction buildResourceEventUis(resourceStore: ResourceHash) {\n  return mapHash(resourceStore, (resource) => resource.ui)\n}\n\nfunction injectResourceEventUis(eventUiBases: EventUiHash, eventDefs: EventDefHash, resourceEventUis: EventUiHash) {\n  return mapHash(eventUiBases, (eventUi, defId) => {\n    if (defId) { // not the '' key\n      return injectResourceEventUi(eventUi, eventDefs[defId], resourceEventUis)\n    }\n    return eventUi\n  })\n}\n\nfunction injectResourceEventUi(origEventUi: EventUi, eventDef: EventDef, resourceEventUis: EventUiHash) {\n  let parts = []\n\n  // first resource takes precedence, which fights with the ordering of combineEventUis, thus the unshifts\n  for (let resourceId of eventDef.resourceIds) {\n    if (resourceEventUis[resourceId]) {\n      parts.unshift(resourceEventUis[resourceId])\n    }\n  }\n\n  parts.unshift(origEventUi)\n\n  return combineEventUis(parts)\n}\n","import { ResourceFetcher } from './resource-source'\nimport { ResourceSourceRefined } from './resource-source-parse'\n\nexport interface ResourceSourceDef<ResourceSourceMeta> {\n  ignoreRange?: boolean\n  parseMeta: (refined: ResourceSourceRefined) => ResourceSourceMeta | null\n  fetch: ResourceFetcher<ResourceSourceMeta>\n}\n\nlet defs: ResourceSourceDef<any>[] = [] // TODO: use plugin system\n\nexport function registerResourceSourceDef<ResourceSourceMeta>(def: ResourceSourceDef<ResourceSourceMeta>) {\n  defs.push(def)\n}\n\nexport function getResourceSourceDef(id: number): ResourceSourceDef<any> {\n  return defs[id]\n}\n\nexport function getResourceSourceDefs(): ResourceSourceDef<any>[] {\n  return defs\n}\n","import { guid, identity, Identity, RefinedOptionsFromRefiners, refineProps, RawOptionsFromRefiners, Dictionary } from '@fullcalendar/common'\nimport { ResourceInput } from './resource'\nimport { ResourceFunc } from '../resource-sources/resource-func'\nimport { ResourceSource } from './resource-source'\nimport { getResourceSourceDefs } from './resource-source-def'\n\n// TODO: make this a plugin-able parser\n// TODO: success/failure\nexport const RESOURCE_SOURCE_REFINERS = {\n  id: String,\n\n  // for array. TODO: move to resource-array\n  resources: identity as Identity<ResourceInput[] | ResourceFunc>,\n\n  // for json feed. TODO: move to resource-json-feed\n  url: String,\n  method: String,\n  startParam: String,\n  endParam: String,\n  timeZoneParam: String,\n  extraParams: identity as Identity<Dictionary | (() => Dictionary)>,\n}\n\nexport type ResourceSourceInputObject = RawOptionsFromRefiners<typeof RESOURCE_SOURCE_REFINERS>\nexport type ResourceSourceRefined = RefinedOptionsFromRefiners<typeof RESOURCE_SOURCE_REFINERS>\n\nexport type ResourceSourceInput =\n  ResourceSourceInputObject |\n  ResourceInput[] |\n  ResourceFunc |\n  string // url\n\nexport function parseResourceSource(input: ResourceSourceInput): ResourceSource<any> {\n  let inputObj: ResourceSourceInputObject\n\n  if (typeof input === 'string') {\n    inputObj = { url: input }\n  } else if (typeof input === 'function' || Array.isArray(input)) {\n    inputObj = { resources: input }\n  } else if (typeof input === 'object' && input) { // non-null object\n    inputObj = input\n  }\n\n  if (inputObj) {\n    let { refined, extra } = refineProps(inputObj, RESOURCE_SOURCE_REFINERS)\n\n    warnUnknownProps(extra)\n\n    let metaRes = buildResourceSourceMeta(refined)\n\n    if (metaRes) {\n      return {\n        _raw: input,\n        sourceId: guid(),\n        sourceDefId: metaRes.sourceDefId,\n        meta: metaRes.meta,\n        publicId: refined.id || '',\n        isFetching: false,\n        latestFetchId: '',\n        fetchRange: null,\n      }\n    }\n  }\n\n  return null\n}\n\nfunction buildResourceSourceMeta(refined: ResourceSourceRefined) {\n  let defs = getResourceSourceDefs()\n\n  for (let i = defs.length - 1; i >= 0; i -= 1) { // later-added plugins take precedence\n    let def = defs[i]\n    let meta = def.parseMeta(refined)\n\n    if (meta) {\n      return { meta, sourceDefId: i }\n    }\n  }\n\n  return null\n}\n\nfunction warnUnknownProps(props) {\n  for (let propName in props) {\n    console.warn(`Unknown resource prop '${propName}'`)\n  }\n}\n","import { DateProfile, rangesEqual, DateRange, guid, CalendarContext } from '@fullcalendar/common'\nimport { ResourceSource } from '../structs/resource-source'\nimport { parseResourceSource } from '../structs/resource-source-parse'\nimport { getResourceSourceDef } from '../structs/resource-source-def'\nimport { ResourceAction } from './resource-action'\n\nexport function reduceResourceSource(\n  source: ResourceSource<any> | null,\n  action: ResourceAction | null,\n  context: CalendarContext & { dateProfile: DateProfile },\n): ResourceSource<any> {\n  let { options, dateProfile } = context\n\n  if (!source || !action) {\n    return createSource(\n      options.initialResources || options.resources,\n      dateProfile.activeRange,\n      options.refetchResourcesOnNavigate,\n      context,\n    )\n  }\n\n  switch (action.type) {\n    case 'RESET_RESOURCE_SOURCE':\n      return createSource(action.resourceSourceInput, dateProfile.activeRange, options.refetchResourcesOnNavigate, context)\n\n    case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n    case 'NEXT':\n    case 'CHANGE_DATE':\n    case 'CHANGE_VIEW_TYPE':\n      return handleRangeChange(source, dateProfile.activeRange, options.refetchResourcesOnNavigate, context)\n\n    case 'RECEIVE_RESOURCES':\n    case 'RECEIVE_RESOURCE_ERROR':\n      return receiveResponse(source, action.fetchId, action.fetchRange)\n\n    case 'REFETCH_RESOURCES':\n      return fetchSource(source, dateProfile.activeRange, context)\n\n    default:\n      return source\n  }\n}\n\nfunction createSource(input, activeRange: DateRange, refetchResourcesOnNavigate, context: CalendarContext) {\n  if (input) {\n    let source = parseResourceSource(input)\n    source = fetchSource(source, refetchResourcesOnNavigate ? activeRange : null, context)\n    return source\n  }\n\n  return null\n}\n\nfunction handleRangeChange(\n  source: ResourceSource<any>,\n  activeRange: DateRange,\n  refetchResourcesOnNavigate,\n  context: CalendarContext,\n): ResourceSource<any> {\n  if (\n    refetchResourcesOnNavigate &&\n    !doesSourceIgnoreRange(source) &&\n    (!source.fetchRange || !rangesEqual(source.fetchRange, activeRange))\n  ) {\n    return fetchSource(source, activeRange, context)\n  }\n  return source\n}\n\nfunction doesSourceIgnoreRange(source: ResourceSource<any>) {\n  return Boolean(getResourceSourceDef(source.sourceDefId).ignoreRange)\n}\n\nfunction fetchSource(source: ResourceSource<any>, fetchRange: DateRange | null, context: CalendarContext): ResourceSource<any> {\n  let sourceDef = getResourceSourceDef(source.sourceDefId)\n  let fetchId = guid()\n\n  sourceDef.fetch(\n    {\n      resourceSource: source,\n      range: fetchRange,\n      context,\n    },\n    (res) => {\n      context.dispatch({\n        type: 'RECEIVE_RESOURCES',\n        fetchId,\n        fetchRange,\n        rawResources: res.rawResources,\n      })\n    },\n    (error) => {\n      context.dispatch({\n        type: 'RECEIVE_RESOURCE_ERROR',\n        fetchId,\n        fetchRange,\n        error,\n      })\n    },\n  )\n\n  return {\n    ...source,\n    isFetching: true,\n    latestFetchId: fetchId,\n  }\n}\n\nfunction receiveResponse(source: ResourceSource<any>, fetchId: string, fetchRange: DateRange) {\n  if (fetchId === source.latestFetchId) {\n    return {\n      ...source,\n      isFetching: false,\n      fetchRange,\n    }\n  }\n\n  return source\n}\n","import {\n  ConstraintInput, AllowFunc, EventStore, parseBusinessHours, CalendarContext, EventUi, BusinessHoursInput,\n  guid, identity, Identity, RawOptionsFromRefiners, parseClassNames, refineProps, createEventUi, Dictionary,\n} from '@fullcalendar/common'\n\nconst PRIVATE_ID_PREFIX = '_fc:'\n\nconst RESOURCE_REFINERS = {\n  id: String,\n  parentId: String,\n  children: identity as Identity<ResourceInput[]>,\n  title: String,\n  businessHours: identity as Identity<BusinessHoursInput>,\n  extendedProps: identity as Identity<Dictionary>,\n\n  // event-ui\n  eventEditable: Boolean,\n  eventStartEditable: Boolean,\n  eventDurationEditable: Boolean,\n  eventConstraint: identity as Identity<ConstraintInput>,\n  eventOverlap: Boolean, // can NOT be a func, different from OptionsInput\n  eventAllow: identity as Identity<AllowFunc>,\n  eventClassNames: parseClassNames,\n  eventBackgroundColor: String,\n  eventBorderColor: String,\n  eventTextColor: String,\n  eventColor: String,\n}\n\ntype BuiltInResourceRefiners = typeof RESOURCE_REFINERS\n\nexport interface ResourceRefiners extends BuiltInResourceRefiners {\n  // for preventing circular definition. also, good for making ambient in the future\n}\n\nexport type ResourceInput =\n  RawOptionsFromRefiners<Required<ResourceRefiners>> & // Required hack\n  { [extendedProps: string]: any }\n\nexport interface Resource {\n  id: string\n  parentId: string\n  title: string\n  businessHours: EventStore | null // if null, will fall thru to non-resource business hours\n  ui: EventUi\n  extendedProps: { [extendedProp: string]: any }\n}\n\nexport type ResourceHash = { [resourceId: string]: Resource }\n\n/*\nneeds a full store so that it can populate children too\n*/\nexport function parseResource(raw: ResourceInput, parentId: string = '', store: ResourceHash, context: CalendarContext): Resource {\n  let { refined, extra } = refineProps(raw, RESOURCE_REFINERS)\n\n  let resource: Resource = {\n    id: refined.id || (PRIVATE_ID_PREFIX + guid()),\n    parentId: refined.parentId || parentId,\n    title: refined.title || '',\n    businessHours: refined.businessHours ? parseBusinessHours(refined.businessHours, context) : null,\n    ui: createEventUi({\n      editable: refined.eventEditable,\n      startEditable: refined.eventStartEditable,\n      durationEditable: refined.eventDurationEditable,\n      constraint: refined.eventConstraint,\n      overlap: refined.eventOverlap,\n      allow: refined.eventAllow,\n      classNames: refined.eventClassNames,\n      backgroundColor: refined.eventBackgroundColor,\n      borderColor: refined.eventBorderColor,\n      textColor: refined.eventTextColor,\n      color: refined.eventColor,\n    }, context),\n    extendedProps: {\n      ...extra,\n      ...refined.extendedProps,\n    },\n  }\n\n  // help out ResourceApi from having user modify props\n  Object.freeze(resource.ui.classNames)\n  Object.freeze(resource.extendedProps)\n\n  if (store[resource.id]) {\n    // console.warn('duplicate resource ID')\n\n  } else {\n    store[resource.id] = resource\n\n    if (refined.children) {\n      for (let childInput of refined.children) {\n        parseResource(childInput, resource.id, store, context)\n      }\n    }\n  }\n\n  return resource\n}\n\n/*\nTODO: use this in more places\n*/\nexport function getPublicId(id: string): string {\n  if (id.indexOf(PRIVATE_ID_PREFIX) === 0) {\n    return ''\n  }\n\n  return id\n}\n","import { CalendarContext } from '@fullcalendar/common'\nimport { ResourceAction } from './resource-action'\nimport { ResourceHash, ResourceInput, parseResource } from '../structs/resource'\nimport { ResourceSource } from '../structs/resource-source'\n\nexport function reduceResourceStore(\n  store: ResourceHash | null,\n  action: ResourceAction | null,\n  source: ResourceSource<any>,\n  context: CalendarContext,\n): ResourceHash {\n  if (!store || !action) {\n    return {}\n  }\n\n  switch (action.type) {\n    case 'RECEIVE_RESOURCES':\n      return receiveRawResources(store, action.rawResources, action.fetchId, source, context)\n\n    case 'ADD_RESOURCE':\n      return addResource(store, action.resourceHash)\n\n    case 'REMOVE_RESOURCE':\n      return removeResource(store, action.resourceId)\n\n    case 'SET_RESOURCE_PROP':\n      return setResourceProp(store, action.resourceId, action.propName, action.propValue)\n\n    case 'SET_RESOURCE_EXTENDED_PROP':\n      return setResourceExtendedProp(store, action.resourceId, action.propName, action.propValue)\n\n    default:\n      return store\n  }\n}\n\nfunction receiveRawResources(\n  existingStore: ResourceHash,\n  inputs: ResourceInput[],\n  fetchId: string,\n  source: ResourceSource<any>,\n  context: CalendarContext,\n): ResourceHash {\n  if (source.latestFetchId === fetchId) {\n    let nextStore: ResourceHash = {}\n\n    for (let input of inputs) {\n      parseResource(input, '', nextStore, context)\n    }\n\n    return nextStore\n  }\n\n  return existingStore\n}\n\nfunction addResource(existingStore: ResourceHash, additions: ResourceHash) {\n  // TODO: warn about duplicate IDs\n\n  return { ...existingStore, ...additions }\n}\n\nfunction removeResource(existingStore: ResourceHash, resourceId: string) {\n  let newStore = { ...existingStore } as ResourceHash\n\n  delete newStore[resourceId]\n\n  // promote children\n  for (let childResourceId in newStore) { // a child, *maybe* but probably not\n    if (newStore[childResourceId].parentId === resourceId) {\n      newStore[childResourceId] = {\n        ...newStore[childResourceId],\n        parentId: '',\n      }\n    }\n  }\n\n  return newStore\n}\n\nfunction setResourceProp(existingStore: ResourceHash, resourceId: string, name: string, value: any): ResourceHash {\n  let existingResource = existingStore[resourceId]\n\n  // TODO: sanitization\n\n  if (existingResource) {\n    return {\n      ...existingStore,\n      [resourceId]: {\n        ...existingResource,\n        [name]: value,\n      },\n    }\n  }\n\n  return existingStore\n}\n\nfunction setResourceExtendedProp(existingStore: ResourceHash, resourceId: string, name: string, value: any): ResourceHash {\n  let existingResource = existingStore[resourceId]\n\n  if (existingResource) {\n    return {\n      ...existingStore,\n      [resourceId]: {\n        ...existingResource,\n        extendedProps: {\n          ...existingResource.extendedProps,\n          [name]: value,\n        },\n      },\n    }\n  }\n\n  return existingStore\n}\n","import { ResourceAction } from './resource-action'\n\nexport type ResourceEntityExpansions = { [id: string]: boolean }\n\nexport function reduceResourceEntityExpansions(\n  expansions: ResourceEntityExpansions | null,\n  action: ResourceAction | null,\n): ResourceEntityExpansions {\n  if (!expansions || !action) {\n    return {}\n  }\n\n  switch (action.type) {\n    case 'SET_RESOURCE_ENTITY_EXPANDED':\n      return {\n        ...expansions,\n        [action.id]: action.isExpanded,\n      }\n\n    default:\n      return expansions\n  }\n}\n","import { CalendarContext, DateProfile } from '@fullcalendar/common'\nimport { ResourceSource } from '../structs/resource-source'\nimport { ResourceHash } from '../structs/resource'\nimport { reduceResourceSource } from './resourceSource'\nimport { reduceResourceStore } from './resourceStore'\nimport { reduceResourceEntityExpansions, ResourceEntityExpansions } from './resourceEntityExpansions'\nimport { ResourceAction } from './resource-action'\n\nexport interface ResourceState {\n  resourceSource: ResourceSource<any>\n  resourceStore: ResourceHash\n  resourceEntityExpansions: ResourceEntityExpansions\n}\n\nexport function reduceResources(\n  state: ResourceState | null,\n  action: ResourceAction | null,\n  context: CalendarContext & { dateProfile: DateProfile },\n) {\n  let resourceSource = reduceResourceSource(state && state.resourceSource, action, context)\n  let resourceStore = reduceResourceStore(state && state.resourceStore, action, resourceSource, context)\n  let resourceEntityExpansions = reduceResourceEntityExpansions(state && state.resourceEntityExpansions, action)\n\n  return {\n    resourceSource,\n    resourceStore,\n    resourceEntityExpansions,\n  }\n}\n","import { EventRefined, identity, Identity } from '@fullcalendar/common'\n\nexport const EVENT_REFINERS = {\n  resourceId: String,\n  resourceIds: identity as Identity<string[]>,\n  resourceEditable: Boolean,\n}\n\nexport function generateEventDefResourceMembers(refined: EventRefined) {\n  return {\n    resourceIds: ensureStringArray(refined.resourceIds)\n      .concat(refined.resourceId ? [refined.resourceId] : []),\n    resourceEditable: refined.resourceEditable,\n  }\n}\n\nfunction ensureStringArray(items: any[]) {\n  return (items || []).map((item) => String(item))\n}\n","import { Hit } from '@fullcalendar/common'\n\nexport function transformDateSelectionJoin(hit0: Hit, hit1: Hit) {\n  let resourceId0 = hit0.dateSpan.resourceId\n  let resourceId1 = hit1.dateSpan.resourceId\n\n  if (resourceId0 && resourceId1) {\n    return { resourceId: resourceId0 }\n  }\n\n  return null\n}\n","import { CalendarContext, EventApi, Dictionary } from '@fullcalendar/common'\nimport { __assign } from 'tslib'\nimport { Resource, getPublicId, ResourceHash } from '../structs/resource'\n\nexport class ResourceApi {\n  constructor(\n    private _context: CalendarContext,\n    public _resource: Resource,\n  ) {\n  }\n\n  setProp(name: string, value: any) {\n    let oldResource = this._resource\n\n    this._context.dispatch({\n      type: 'SET_RESOURCE_PROP',\n      resourceId: oldResource.id,\n      propName: name,\n      propValue: value,\n    })\n\n    this.sync(oldResource)\n  }\n\n  setExtendedProp(name: string, value: any) {\n    let oldResource = this._resource\n\n    this._context.dispatch({\n      type: 'SET_RESOURCE_EXTENDED_PROP',\n      resourceId: oldResource.id,\n      propName: name,\n      propValue: value,\n    })\n\n    this.sync(oldResource)\n  }\n\n  private sync(oldResource: Resource) {\n    let context = this._context\n    let resourceId = oldResource.id\n\n    // TODO: what if dispatch didn't complete synchronously?\n    this._resource = context.getCurrentData().resourceStore[resourceId]\n\n    context.emitter.trigger('resourceChange', {\n      oldResource: new ResourceApi(context, oldResource),\n      resource: this,\n      revert() {\n        context.dispatch({\n          type: 'ADD_RESOURCE', // function as a merge. TODO: rename\n          resourceHash: {\n            [resourceId]: oldResource,\n          },\n        })\n      },\n    })\n  }\n\n  remove() {\n    let context = this._context\n    let internalResource = this._resource\n    let resourceId = internalResource.id\n\n    context.dispatch({\n      type: 'REMOVE_RESOURCE',\n      resourceId,\n    })\n\n    context.emitter.trigger('resourceRemove', {\n      resource: this,\n      revert() {\n        context.dispatch({\n          type: 'ADD_RESOURCE', // function as a merge. TODO: rename\n          resourceHash: {\n            [resourceId]: internalResource,\n          },\n        })\n      },\n    })\n  }\n\n  getParent(): ResourceApi | null {\n    let context = this._context\n    let parentId = this._resource.parentId\n\n    if (parentId) {\n      return new ResourceApi(\n        context,\n        context.getCurrentData().resourceSource[parentId],\n      )\n    }\n\n    return null\n  }\n\n  getChildren(): ResourceApi[] {\n    let thisResourceId = this._resource.id\n    let context = this._context\n    let { resourceStore } = context.getCurrentData()\n    let childApis: ResourceApi[] = []\n\n    for (let resourceId in resourceStore) {\n      if (resourceStore[resourceId].parentId === thisResourceId) {\n        childApis.push(\n          new ResourceApi(context, resourceStore[resourceId]),\n        )\n      }\n    }\n\n    return childApis\n  }\n\n  /*\n  this is really inefficient!\n  TODO: make EventApi::resourceIds a hash or keep an index in the Calendar's state\n  */\n  getEvents(): EventApi[] {\n    let thisResourceId = this._resource.id\n    let context = this._context\n    let { defs, instances } = context.getCurrentData().eventStore\n    let eventApis: EventApi[] = []\n\n    for (let instanceId in instances) {\n      let instance = instances[instanceId]\n      let def = defs[instance.defId]\n\n      if (def.resourceIds.indexOf(thisResourceId) !== -1) { // inefficient!!!\n        eventApis.push(new EventApi(context, def, instance))\n      }\n    }\n\n    return eventApis\n  }\n\n  get id() { return getPublicId(this._resource.id) }\n  get title() { return this._resource.title }\n  get eventConstraint() { return this._resource.ui.constraints[0] || null }\n  get eventOverlap() { return this._resource.ui.overlap }\n  get eventAllow() { return this._resource.ui.allows[0] || null }\n  get eventBackgroundColor() { return this._resource.ui.backgroundColor }\n  get eventBorderColor() { return this._resource.ui.borderColor }\n  get eventTextColor() { return this._resource.ui.textColor }\n\n  // NOTE: user can't modify these because Object.freeze was called in event-def parsing\n  get eventClassNames() { return this._resource.ui.classNames }\n  get extendedProps() { return this._resource.extendedProps }\n\n  toPlainObject(settings: { collapseExtendedProps?: boolean, collapseEventColor?: boolean } = {}) {\n    let internal = this._resource\n    let { ui } = internal\n    let publicId = this.id\n    let res: Dictionary = {}\n\n    if (publicId) {\n      res.id = publicId\n    }\n\n    if (internal.title) {\n      res.title = internal.title\n    }\n\n    if (settings.collapseEventColor && ui.backgroundColor && ui.backgroundColor === ui.borderColor) {\n      res.eventColor = ui.backgroundColor\n    } else {\n      if (ui.backgroundColor) {\n        res.eventBackgroundColor = ui.backgroundColor\n      }\n      if (ui.borderColor) {\n        res.eventBorderColor = ui.borderColor\n      }\n    }\n\n    if (ui.textColor) {\n      res.eventTextColor = ui.textColor\n    }\n\n    if (ui.classNames.length) {\n      res.eventClassNames = ui.classNames\n    }\n\n    if (Object.keys(internal.extendedProps).length) {\n      if (settings.collapseExtendedProps) {\n        __assign(res, internal.extendedProps)\n      } else {\n        res.extendedProps = internal.extendedProps\n      }\n    }\n\n    return res\n  }\n\n  toJSON() {\n    return this.toPlainObject()\n  }\n}\n\nexport function buildResourceApis(resourceStore: ResourceHash, context: CalendarContext) {\n  let resourceApis: ResourceApi[] = []\n\n  for (let resourceId in resourceStore) {\n    resourceApis.push(new ResourceApi(context, resourceStore[resourceId]))\n  }\n\n  return resourceApis\n}\n","import { DateSpan, CalendarApi, CalendarContext } from '@fullcalendar/common'\nimport { ResourceApi } from './ResourceApi'\nimport { ResourceInput, parseResource, ResourceHash, Resource } from '../structs/resource'\n\nCalendarApi.prototype.addResource = function ( // eslint-disable-line func-names\n  this: CalendarApi,\n  input: ResourceInput | ResourceApi,\n  scrollTo = true,\n) {\n  let currentState = this.getCurrentData()\n  let resourceHash: ResourceHash\n  let resource: Resource\n\n  if (input instanceof ResourceApi) {\n    resource = input._resource\n    resourceHash = { [resource.id]: resource }\n  } else {\n    resourceHash = {}\n    resource = parseResource(input, '', resourceHash, currentState)\n  }\n\n  this.dispatch({\n    type: 'ADD_RESOURCE',\n    resourceHash,\n  })\n\n  if (scrollTo) {\n    // TODO: wait til dispatch completes somehow\n    this.trigger('_scrollRequest', { resourceId: resource.id })\n  }\n\n  let resourceApi = new ResourceApi(currentState, resource)\n\n  currentState.emitter.trigger('resourceAdd', {\n    resource: resourceApi,\n    revert: () => {\n      this.dispatch({\n        type: 'REMOVE_RESOURCE',\n        resourceId: resource.id,\n      })\n    },\n  })\n\n  return resourceApi\n}\n\nCalendarApi.prototype.getResourceById = function (this: CalendarApi, id: string) { // eslint-disable-line func-names\n  id = String(id)\n  let currentState = this.getCurrentData() // eslint-disable-line react/no-this-in-sfc\n\n  if (currentState.resourceStore) { // guard against calendar with no resource functionality\n    let rawResource = currentState.resourceStore[id]\n\n    if (rawResource) {\n      return new ResourceApi(currentState, rawResource)\n    }\n  }\n\n  return null\n}\n\nCalendarApi.prototype.getResources = function (this: CalendarApi): ResourceApi[] { // eslint-disable-line func-names\n  let currentState = this.getCurrentData()\n  let { resourceStore } = currentState\n  let resourceApis: ResourceApi[] = []\n\n  if (resourceStore) { // guard against calendar with no resource functionality\n    for (let resourceId in resourceStore) {\n      resourceApis.push(\n        new ResourceApi(currentState, resourceStore[resourceId]),\n      )\n    }\n  }\n\n  return resourceApis\n}\n\nCalendarApi.prototype.getTopLevelResources = function (this: CalendarApi): ResourceApi[] { // eslint-disable-line func-names\n  let currentState = this.getCurrentData()\n  let { resourceStore } = currentState\n  let resourceApis: ResourceApi[] = []\n\n  if (resourceStore) { // guard against calendar with no resource functionality\n    for (let resourceId in resourceStore) {\n      if (!resourceStore[resourceId].parentId) {\n        resourceApis.push(\n          new ResourceApi(currentState, resourceStore[resourceId]),\n        )\n      }\n    }\n  }\n\n  return resourceApis\n}\n\nCalendarApi.prototype.refetchResources = function (this: CalendarApi) { // eslint-disable-line func-names\n  this.dispatch({\n    type: 'REFETCH_RESOURCES',\n  })\n}\n\nexport function transformDatePoint(dateSpan: DateSpan, context: CalendarContext) {\n  return dateSpan.resourceId ?\n    { resource: context.calendarApi.getResourceById(dateSpan.resourceId) } :\n    {}\n}\n\nexport function transformDateSpan(dateSpan: DateSpan, context: CalendarContext) {\n  return dateSpan.resourceId ?\n    { resource: context.calendarApi.getResourceById(dateSpan.resourceId) } :\n    {}\n}\n","import { Splitter, SplittableProps, DateSpan, EventDef } from '@fullcalendar/common'\nimport { ResourceHash } from '../structs/resource'\n\nexport interface SplittableResourceProps extends SplittableProps {\n  resourceStore: ResourceHash\n}\n\n/*\nsplits things BASED OFF OF which resources they are associated with.\ncreates a '' entry which is when something has NO resource.\n*/\nexport class ResourceSplitter extends Splitter<SplittableResourceProps> {\n  getKeyInfo(props: SplittableResourceProps) {\n    return {\n      '': {}, // needed for non-resource\n      ...props.resourceStore, // already has `ui` and `businessHours` keys!\n    }\n  }\n\n  getKeysForDateSpan(dateSpan: DateSpan): string[] {\n    return [dateSpan.resourceId || '']\n  }\n\n  getKeysForEventDef(eventDef: EventDef): string[] {\n    let resourceIds = eventDef.resourceIds\n\n    if (!resourceIds.length) {\n      return ['']\n    }\n\n    return resourceIds\n  }\n}\n","import { SplittableProps, EventUi, isPropsValid, Constraint, EventStore, mergeEventStores, CalendarContext } from '@fullcalendar/common'\nimport { ResourceSplitter } from './common/ResourceSplitter'\n\nexport function isPropsValidWithResources(combinedProps: SplittableProps, context: CalendarContext): boolean {\n  let splitter = new ResourceSplitter()\n\n  let sets = splitter.splitProps({\n    ...combinedProps,\n    resourceStore: context.getCurrentData().resourceStore,\n  })\n\n  for (let resourceId in sets) {\n    let props = sets[resourceId]\n\n    // merge in event data from the non-resource segment\n    if (resourceId && sets['']) { // current segment is not the non-resource one, and there IS a non-resource one\n      props = {\n        ...props,\n        eventStore: mergeEventStores(sets[''].eventStore, props.eventStore),\n        eventUiBases: { ...sets[''].eventUiBases, ...props.eventUiBases },\n      }\n    }\n\n    if (!isPropsValid(props, context, { resourceId }, filterConfig.bind(null, resourceId))) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction filterConfig(resourceId, config: EventUi) {\n  return {\n    ...config,\n    constraints: filterConstraints(resourceId, config.constraints),\n  }\n}\n\nfunction filterConstraints(resourceId: string, constraints: Constraint[]) {\n  return constraints.map((constraint) => {\n    let defs = (constraint as EventStore).defs\n    if (defs) { // we are dealing with an EventStore\n      // if any of the events define constraints to resources that are NOT this resource,\n      // then this resource is unconditionally prohibited, which is what a `false` value does.\n      for (let defId in defs) {\n        let resourceIds = defs[defId].resourceIds\n        if (resourceIds.length && resourceIds.indexOf(resourceId) === -1) { // TODO: use a hash?!!! (for other reasons too)\n          return false\n        }\n      }\n    }\n\n    return constraint\n  })\n}\n","import { DateSpan } from '@fullcalendar/common'\n\nexport function transformExternalDef(dateSpan: DateSpan) {\n  return dateSpan.resourceId ?\n    { resourceId: dateSpan.resourceId } :\n    {}\n}\n","import { EventApi } from '@fullcalendar/common'\nimport { ResourceApi } from './ResourceApi'\n\nEventApi.prototype.getResources = function (this: EventApi): ResourceApi[] { // eslint-disable-line func-names\n  let { calendarApi } = this._context\n\n  return this._def.resourceIds.map((resourceId) => calendarApi.getResourceById(resourceId))\n}\n\nEventApi.prototype.setResources = function ( // eslint-disable-line func-names\n  this: EventApi,\n  resources: (string | ResourceApi)[],\n) {\n  let resourceIds = []\n\n  // massage resources -> resourceIds\n  for (let resource of resources) {\n    let resourceId = null\n\n    if (typeof resource === 'string') {\n      resourceId = resource\n    } else if (typeof resource === 'number') {\n      resourceId = String(resource)\n    } else if (resource instanceof ResourceApi) {\n      resourceId = resource.id // guaranteed to always have an ID. hmmm\n    } else {\n      console.warn('unknown resource type: ' + resource)\n    }\n\n    if (resourceId) {\n      resourceIds.push(resourceId)\n    }\n  }\n\n  this.mutate({\n    standardProps: {\n      resourceIds,\n    },\n  })\n}\n","import { CalendarContext } from '@fullcalendar/common'\n\nexport const optionChangeHandlers = {\n  resources: handleResources,\n}\n\nfunction handleResources(newSourceInput, context: CalendarContext) {\n  let oldSourceInput = context.getCurrentData().resourceSource._raw\n\n  if (oldSourceInput !== newSourceInput) {\n    context.dispatch({\n      type: 'RESET_RESOURCE_SOURCE',\n      resourceSourceInput: newSourceInput,\n    })\n  }\n}\n","import { CalendarData, parseFieldSpecs } from '@fullcalendar/common'\nimport { buildResourceApis, ResourceApi } from './api/ResourceApi'\nimport { ResourceHash } from './structs/resource'\n\nexport const DEFAULT_RESOURCE_ORDER = parseFieldSpecs('id,title')\n\nexport interface ResourceAddArg {\n  resource: ResourceApi\n  revert: () => void\n}\n\nexport interface ResourceChangeArg {\n  oldResource: ResourceApi\n  resource: ResourceApi\n  revert: () => void\n}\n\nexport interface ResourceRemoveArg {\n  resource: ResourceApi\n  revert: () => void\n}\n\nexport function handleResourceStore(resourceStore: ResourceHash, calendarData: CalendarData) {\n  let { emitter } = calendarData\n\n  if (emitter.hasHandlers('resourcesSet')) {\n    emitter.trigger('resourcesSet', buildResourceApis(resourceStore, calendarData))\n  }\n}\n","import {\n  Identity, CssDimValue, ClassNamesGenerator, CustomContentGenerator, DidMountHandler, WillUnmountHandler,\n  identity, parseFieldSpecs,\n} from '@fullcalendar/common'\n\n// public\nimport {\n  ResourceSourceInput,\n  ResourceLabelContentArg, ResourceLabelMountArg,\n  ColSpec,\n  ColHeaderContentArg, ColHeaderMountArg,\n  ColCellContentArg, ColCellMountArg,\n  ResourceLaneContentArg, ResourceLaneMountArg,\n  ResourceApi,\n  ResourceAddArg, ResourceChangeArg, ResourceRemoveArg,\n} from './api-type-deps'\n\nexport const OPTION_REFINERS = {\n  initialResources: identity as Identity<ResourceSourceInput>,\n  resources: identity as Identity<ResourceSourceInput>,\n\n  eventResourceEditable: Boolean,\n  refetchResourcesOnNavigate: Boolean,\n  resourceOrder: parseFieldSpecs,\n  filterResourcesWithEvents: Boolean,\n  resourceGroupField: String,\n  resourceAreaWidth: identity as Identity<CssDimValue>,\n  resourceAreaColumns: identity as Identity<ColSpec[]>,\n  resourcesInitiallyExpanded: Boolean,\n  datesAboveResources: Boolean,\n  needsResourceData: Boolean, // internal-only\n\n  resourceAreaHeaderClassNames: identity as Identity<ClassNamesGenerator<ColHeaderContentArg>>,\n  resourceAreaHeaderContent: identity as Identity<CustomContentGenerator<ColHeaderContentArg>>,\n  resourceAreaHeaderDidMount: identity as Identity<DidMountHandler<ColHeaderMountArg>>,\n  resourceAreaHeaderWillUnmount: identity as Identity<WillUnmountHandler<ColHeaderMountArg>>,\n\n  resourceGroupLabelClassNames: identity as Identity<ClassNamesGenerator<ColCellContentArg>>,\n  resourceGroupLabelContent: identity as Identity<CustomContentGenerator<ColCellContentArg>>,\n  resourceGroupLabelDidMount: identity as Identity<DidMountHandler<ColCellMountArg>>,\n  resourceGroupLabelWillUnmount: identity as Identity<WillUnmountHandler<ColCellMountArg>>,\n\n  resourceLabelClassNames: identity as Identity<ClassNamesGenerator<ResourceLabelContentArg>>,\n  resourceLabelContent: identity as Identity<CustomContentGenerator<ResourceLabelContentArg>>,\n  resourceLabelDidMount: identity as Identity<DidMountHandler<ResourceLabelMountArg>>,\n  resourceLabelWillUnmount: identity as Identity<WillUnmountHandler<ResourceLabelMountArg>>,\n\n  resourceLaneClassNames: identity as Identity<ClassNamesGenerator<ResourceLaneContentArg>>,\n  resourceLaneContent: identity as Identity<CustomContentGenerator<ResourceLaneContentArg>>,\n  resourceLaneDidMount: identity as Identity<DidMountHandler<ResourceLaneMountArg>>,\n  resourceLaneWillUnmount: identity as Identity<WillUnmountHandler<ResourceLaneMountArg>>,\n\n  resourceGroupLaneClassNames: identity as Identity<ClassNamesGenerator<ColCellContentArg>>,\n  resourceGroupLaneContent: identity as Identity<CustomContentGenerator<ColCellContentArg>>,\n  resourceGroupLaneDidMount: identity as Identity<DidMountHandler<ColCellMountArg>>,\n  resourceGroupLaneWillUnmount: identity as Identity<WillUnmountHandler<ColCellMountArg>>,\n}\n\nexport const LISTENER_REFINERS = {\n  resourcesSet: identity as Identity<(resources: ResourceApi[]) => void>,\n  resourceAdd: identity as Identity<(arg: ResourceAddArg) => void>,\n  resourceChange: identity as Identity<(arg: ResourceChangeArg) => void>,\n  resourceRemove: identity as Identity<(arg: ResourceRemoveArg) => void>,\n}\n","import { registerResourceSourceDef } from '../structs/resource-source-def'\nimport { ResourceInput } from '../structs/resource'\nimport { ResourceSourceRefined } from '../structs/resource-source-parse'\n\nregisterResourceSourceDef<ResourceInput[]>({\n\n  ignoreRange: true,\n\n  parseMeta(refined: ResourceSourceRefined) {\n    if (Array.isArray(refined.resources)) {\n      return refined.resources\n    }\n    return null\n  },\n\n  fetch(arg, successCallback) {\n    successCallback({\n      rawResources: arg.resourceSource.meta,\n    })\n  },\n\n})\n","import { unpromisify } from '@fullcalendar/common'\nimport { ResourceSourceError } from '../structs/resource-source'\nimport { registerResourceSourceDef } from '../structs/resource-source-def'\nimport { ResourceInput } from '../structs/resource'\nimport { ResourceSourceRefined } from '../structs/resource-source-parse'\n\nexport interface ResourceFuncArg {\n  start?: Date\n  end?: Date\n  startStr?: string\n  endStr?: string\n  timeZone?: string\n}\n\nexport type ResourceFunc = (\n  arg: ResourceFuncArg,\n  successCallback: (events: ResourceInput[]) => void,\n  failureCallback: (errorObj: ResourceSourceError) => void\n) => any // TODO: promise-like object or nothing\n\nregisterResourceSourceDef<ResourceFunc>({\n\n  parseMeta(refined: ResourceSourceRefined) {\n    if (typeof refined.resources === 'function') {\n      return refined.resources\n    }\n    return null\n  },\n\n  fetch(arg, success, failure) {\n    let dateEnv = arg.context.dateEnv\n    let func = arg.resourceSource.meta\n\n    let publicArg: ResourceFuncArg = arg.range ? {\n      start: dateEnv.toDate(arg.range.start),\n      end: dateEnv.toDate(arg.range.end),\n      startStr: dateEnv.formatIso(arg.range.start),\n      endStr: dateEnv.formatIso(arg.range.end),\n      timeZone: dateEnv.timeZone,\n    } : {}\n\n    // TODO: make more dry with EventSourceFunc\n    // TODO: accept a response?\n    unpromisify(\n      func.bind(null, publicArg),\n      (rawResources) => { // success\n        success({ rawResources }) // needs an object response\n      },\n      failure, // send errorObj directly to failure callback\n    )\n  },\n\n})\n","import { DateRange, CalendarContext, requestJson, Dictionary } from '@fullcalendar/common'\nimport { __assign } from 'tslib'\nimport { registerResourceSourceDef } from '../structs/resource-source-def'\nimport { ResourceSourceRefined } from '../structs/resource-source-parse'\n\ninterface JsonFeedMeta {\n  url: string\n  method: string\n  startParam?: string\n  endParam?: string\n  timeZoneParam?: string\n  extraParams?: Dictionary | (() => Dictionary)\n}\n\nregisterResourceSourceDef<JsonFeedMeta>({\n\n  parseMeta(refined: ResourceSourceRefined) {\n    if (refined.url) {\n      return {\n        url: refined.url,\n        method: (refined.method || 'GET').toUpperCase(),\n        extraParams: refined.extraParams,\n      }\n    }\n    return null\n  },\n\n  fetch(arg, successCallback, failureCallback) {\n    let meta = arg.resourceSource.meta\n    let requestParams = buildRequestParams(meta, arg.range, arg.context)\n\n    requestJson(meta.method, meta.url, requestParams, (rawResources, xhr) => {\n      successCallback({ rawResources, xhr })\n    }, (message, xhr) => {\n      failureCallback({ message, xhr })\n    })\n  },\n\n})\n\n// TODO: somehow consolidate with event json feed\nfunction buildRequestParams(meta: JsonFeedMeta, range: DateRange | null, context: CalendarContext) {\n  let { dateEnv, options } = context\n  let startParam\n  let endParam\n  let timeZoneParam\n  let customRequestParams\n  let params = {}\n\n  if (range) {\n    startParam = meta.startParam\n    if (startParam == null) {\n      startParam = options.startParam\n    }\n\n    endParam = meta.endParam\n    if (endParam == null) {\n      endParam = options.endParam\n    }\n\n    timeZoneParam = meta.timeZoneParam\n    if (timeZoneParam == null) {\n      timeZoneParam = options.timeZoneParam\n    }\n\n    params[startParam] = dateEnv.formatIso(range.start)\n    params[endParam] = dateEnv.formatIso(range.end)\n\n    if (dateEnv.timeZone !== 'local') {\n      params[timeZoneParam] = dateEnv.timeZone\n    }\n  }\n\n  // retrieve any outbound GET/POST data from the options\n  if (typeof meta.extraParams === 'function') {\n    // supplied as a function that returns a key/value object\n    customRequestParams = meta.extraParams()\n  } else {\n    // probably supplied as a straight key/value object\n    customRequestParams = meta.extraParams || {}\n  }\n\n  __assign(params, customRequestParams)\n\n  return params\n}\n","import {\n  createElement, Ref, ComponentChildren, ViewContextType, ViewContext, RenderHook,\n  ViewApi, formatDayString, Dictionary, MountArg,\n} from '@fullcalendar/common'\nimport { Resource } from '../structs/resource'\nimport { ResourceApi } from '../api/ResourceApi'\n\nexport interface ResourceLabelRootProps {\n  resource: Resource\n  date?: Date\n  children: (\n    rootElRef: Ref<HTMLElement>,\n    classNames: string[],\n    dataAttrs: Dictionary,\n    innerElRef: Ref<HTMLElement>,\n    innerContent: ComponentChildren\n  ) => ComponentChildren\n}\n\nexport interface ResourceLabelContentArg {\n  resource: ResourceApi\n  date?: Date\n  view: ViewApi\n}\n\nexport type ResourceLabelMountArg = MountArg<ResourceLabelContentArg>\n\n// TODO: not used for Spreadsheet. START USING. difficult because of col-specific rendering props\n\nexport function ResourceLabelRoot(props: ResourceLabelRootProps) {\n  return (\n    <ViewContextType.Consumer>\n      {(context: ViewContext) => {\n        let { options } = context\n        let hookProps: ResourceLabelContentArg = {\n          resource: new ResourceApi(context, props.resource),\n          date: props.date ? context.dateEnv.toDate(props.date) : null,\n          view: context.viewApi,\n        }\n\n        let dataAttrs = {\n          'data-resource-id': props.resource.id, // TODO: only do public-facing one?\n          'data-date': props.date ? formatDayString(props.date) : undefined,\n        }\n\n        return (\n          <RenderHook<ResourceLabelContentArg>\n            hookProps={hookProps}\n            classNames={options.resourceLabelClassNames}\n            content={options.resourceLabelContent}\n            defaultContent={renderInnerContent}\n            didMount={options.resourceLabelDidMount}\n            willUnmount={options.resourceLabelWillUnmount}\n          >\n            {(rootElRef, classNames, innerElRef, innerContent) => props.children(\n              rootElRef,\n              classNames, // TODO: pass in 'fc-resource' ?\n              dataAttrs,\n              innerElRef,\n              innerContent,\n            )}\n          </RenderHook>\n        )\n      }}\n    </ViewContextType.Consumer>\n  )\n}\n\nfunction renderInnerContent(props: ResourceLabelContentArg) {\n  return props.resource.title || props.resource.id\n}\n","import { createElement, BaseComponent, DateMarker, Ref, ComponentChildren } from '@fullcalendar/common'\nimport { Resource } from '../structs/resource'\nimport { ResourceLabelRoot } from './ResourceLabelRoot'\n\nexport interface ResourceCellProps {\n  resource: Resource\n  colSpan: number\n  date?: DateMarker\n  isSticky?: boolean\n}\n\nexport class ResourceCell extends BaseComponent<ResourceCellProps> {\n  render() {\n    let { props } = this\n\n    return (\n      <ResourceLabelRoot resource={props.resource} date={props.date}>\n        {(elRef: Ref<HTMLTableCellElement>, customClassNames: string[], dataAttrs, innerElRef, innerContent: ComponentChildren) => (\n          <th\n            ref={elRef}\n            className={['fc-col-header-cell', 'fc-resource'].concat(customClassNames).join(' ')}\n            colSpan={props.colSpan}\n            {...dataAttrs}\n          >\n            <div className=\"fc-scrollgrid-sync-inner\">\n              <span\n                className={[\n                  'fc-col-header-cell-cushion',\n                  props.isSticky ? 'fc-sticky' : '',\n                ].join(' ')}\n                ref={innerElRef}\n              >\n                {innerContent}\n              </span>\n            </div>\n          </th>\n        )}\n      </ResourceLabelRoot>\n    )\n  }\n}\n","import {\n  VNode, createElement, TableDowCell, memoize, BaseComponent,\n  DateMarker, DateFormatter, computeFallbackHeaderFormat, TableDateCell, Fragment,\n  DateRange, NowTimer, DateProfile,\n} from '@fullcalendar/common'\nimport { Resource } from '../structs/resource'\nimport { ResourceApi } from '../api/ResourceApi'\nimport { ResourceCell } from './ResourceCell'\n\nexport interface ResourceDayHeaderProps {\n  dates: DateMarker[]\n  dateProfile: DateProfile\n  datesRepDistinctDays: boolean\n  resources: Resource[] // flattened\n  renderIntro?: (rowKey: string) => VNode\n}\n\nexport class ResourceDayHeader extends BaseComponent<ResourceDayHeaderProps> { // TODO: rename to ResourceDayHeaderTrs?\n  private buildDateFormat = memoize(buildDateFormat)\n\n  render() {\n    let { props, context } = this\n    let dateFormat = this.buildDateFormat(\n      context.options.dayHeaderFormat,\n      props.datesRepDistinctDays,\n      props.dates.length,\n    )\n\n    return (\n      <NowTimer unit=\"day\">\n        {(nowDate: DateMarker, todayRange: DateRange) => {\n          if (props.dates.length === 1) {\n            return this.renderResourceRow(props.resources, props.dates[0])\n          }\n          if (context.options.datesAboveResources) {\n            return this.renderDayAndResourceRows(props.dates, dateFormat, todayRange, props.resources)\n          }\n          return this.renderResourceAndDayRows(props.resources, props.dates, dateFormat, todayRange)\n        }}\n      </NowTimer>\n    )\n  }\n\n  renderResourceRow(resources: Resource[], date: DateMarker) {\n    let resourceCells = resources.map((resource) => (\n      <ResourceCell\n        key={resource.id}\n        resource={resource}\n        colSpan={1}\n        date={date}\n      />\n    ))\n    return this.buildTr(resourceCells, 'resources')\n  }\n\n  renderDayAndResourceRows(dates: DateMarker[], dateFormat: DateFormatter, todayRange: DateRange, resources: Resource[]) {\n    let dateCells: VNode[] = []\n    let resourceCells: VNode[] = []\n\n    for (let date of dates) {\n      dateCells.push(\n        this.renderDateCell(date, dateFormat, todayRange, resources.length, null, true),\n      )\n\n      for (let resource of resources) {\n        resourceCells.push(\n          <ResourceCell\n            key={resource.id + ':' + date.toISOString()}\n            resource={resource}\n            colSpan={1}\n            date={date}\n          />,\n        )\n      }\n    }\n\n    return (\n      <Fragment>\n        {this.buildTr(dateCells, 'day')}\n        {this.buildTr(resourceCells, 'resources')}\n      </Fragment>\n    )\n  }\n\n  renderResourceAndDayRows(resources: Resource[], dates: DateMarker[], dateFormat: DateFormatter, todayRange: DateRange) {\n    let resourceCells: VNode[] = []\n    let dateCells: VNode[] = []\n\n    for (let resource of resources) {\n      resourceCells.push(\n        <ResourceCell\n          key={resource.id}\n          resource={resource}\n          colSpan={dates.length}\n          isSticky\n        />,\n      )\n\n      for (let date of dates) {\n        dateCells.push(\n          this.renderDateCell(date, dateFormat, todayRange, 1, resource),\n        )\n      }\n    }\n\n    return (\n      <Fragment>\n        {this.buildTr(resourceCells, 'resources')}\n        {this.buildTr(dateCells, 'day')}\n      </Fragment>\n    )\n  }\n\n  // a cell with date text. might have a resource associated with it\n  renderDateCell(\n    date: DateMarker,\n    dateFormat: DateFormatter,\n    todayRange: DateRange,\n    colSpan: number,\n    resource?: Resource,\n    isSticky?: boolean,\n  ) {\n    let { props } = this\n    let keyPostfix = resource ? `:${resource.id}` : ''\n    let extraHookProps = resource ? { resource: new ResourceApi(this.context, resource) } : {}\n    let extraDataAttrs = resource ? { 'data-resource-id': resource.id } : {}\n\n    return props.datesRepDistinctDays ? (\n      <TableDateCell\n        key={date.toISOString() + keyPostfix}\n        date={date}\n        dateProfile={props.dateProfile}\n        todayRange={todayRange}\n        colCnt={props.dates.length * props.resources.length}\n        dayHeaderFormat={dateFormat}\n        colSpan={colSpan}\n        isSticky={isSticky}\n        extraHookProps={extraHookProps}\n        extraDataAttrs={extraDataAttrs}\n      />\n    ) : (\n      <TableDowCell // we can't leverage the pure-componentness becausae the extra* props are new every time :(\n        key={date.getUTCDay() + keyPostfix}\n        dow={date.getUTCDay()}\n        dayHeaderFormat={dateFormat}\n        colSpan={colSpan}\n        isSticky={isSticky}\n        extraHookProps={extraHookProps}\n        extraDataAttrs={extraDataAttrs}\n      />\n    )\n  }\n\n  buildTr(cells: VNode[], key: string) {\n    let { renderIntro } = this.props\n\n    if (!cells.length) {\n      cells = [<td key={0}>&nbsp;</td>]\n    }\n\n    return (\n      <tr key={key}>\n        {renderIntro && renderIntro(key)}\n        {cells}\n      </tr>\n    )\n  }\n}\n\nfunction buildDateFormat(dayHeaderFormat: DateFormatter, datesRepDistinctDays, dayCnt) {\n  return dayHeaderFormat || computeFallbackHeaderFormat(datesRepDistinctDays, dayCnt)\n}\n","import { Resource } from '../structs/resource'\n\nexport class ResourceIndex {\n  indicesById: { [resourceId: string]: number }\n  ids: string[]\n  length: number\n\n  constructor(resources: Resource[]) {\n    let indicesById = {}\n    let ids = []\n\n    for (let i = 0; i < resources.length; i += 1) {\n      let id = resources[i].id\n\n      ids.push(id)\n      indicesById[id] = i\n    }\n\n    this.ids = ids\n    this.indicesById = indicesById\n    this.length = resources.length\n  }\n}\n","import { CalendarContext, DayTableModel, DayTableCell } from '@fullcalendar/common'\nimport { __assign } from 'tslib'\nimport { Resource } from '../structs/resource'\nimport { ResourceApi } from '../api/ResourceApi'\nimport { ResourceIndex } from './ResourceIndex'\n\nexport abstract class AbstractResourceDayTableModel {\n  cells: DayTableCell[][]\n  rowCnt: number\n  colCnt: number\n  resourceIndex: ResourceIndex\n\n  constructor(\n    public dayTableModel: DayTableModel,\n    public resources: Resource[],\n    private context: CalendarContext,\n  ) {\n    this.resourceIndex = new ResourceIndex(resources)\n    this.rowCnt = dayTableModel.rowCnt\n    this.colCnt = dayTableModel.colCnt * resources.length\n    this.cells = this.buildCells()\n  }\n\n  abstract computeCol(dateI, resourceI): number\n  abstract computeColRanges(dateStartI, dateEndI, resourceI): {\n    firstCol: number,\n    lastCol: number,\n    isStart: boolean,\n    isEnd: boolean\n  }[]\n\n  buildCells(): DayTableCell[][] {\n    let { rowCnt, dayTableModel, resources } = this\n    let rows: DayTableCell[][] = []\n\n    for (let row = 0; row < rowCnt; row += 1) {\n      let rowCells: DayTableCell[] = []\n\n      for (let dateCol = 0; dateCol < dayTableModel.colCnt; dateCol += 1) {\n        for (let resourceCol = 0; resourceCol < resources.length; resourceCol += 1) {\n          let resource = resources[resourceCol]\n          let extraHookProps = { resource: new ResourceApi(this.context, resource) }\n          let extraDataAttrs = { 'data-resource-id': resource.id }\n          let extraClassNames = ['fc-resource']\n          let extraDateSpan = { resourceId: resource.id }\n          let date = dayTableModel.cells[row][dateCol].date\n\n          rowCells[\n            this.computeCol(dateCol, resourceCol)\n          ] = {\n            key: resource.id + ':' + date.toISOString(),\n            date,\n            extraHookProps,\n            extraDataAttrs,\n            extraClassNames,\n            extraDateSpan,\n          }\n        }\n      }\n\n      rows.push(rowCells)\n    }\n\n    return rows\n  }\n}\n","import { __assign } from 'tslib'\nimport { AbstractResourceDayTableModel } from './AbstractResourceDayTableModel'\n\n/*\nresources over dates\n*/\nexport class ResourceDayTableModel extends AbstractResourceDayTableModel {\n  computeCol(dateI, resourceI) {\n    return resourceI * this.dayTableModel.colCnt + dateI\n  }\n\n  /*\n  all date ranges are intact\n  */\n  computeColRanges(dateStartI, dateEndI, resourceI) {\n    return [\n      {\n        firstCol: this.computeCol(dateStartI, resourceI),\n        lastCol: this.computeCol(dateEndI, resourceI),\n        isStart: true,\n        isEnd: true,\n      },\n    ]\n  }\n}\n","import { __assign } from 'tslib'\nimport { AbstractResourceDayTableModel } from './AbstractResourceDayTableModel'\n\n/*\ndates over resources\n*/\nexport class DayResourceTableModel extends AbstractResourceDayTableModel {\n  computeCol(dateI, resourceI) {\n    return dateI * this.resources.length + resourceI\n  }\n\n  /*\n  every single day is broken up\n  */\n  computeColRanges(dateStartI, dateEndI, resourceI) {\n    let segs = []\n\n    for (let i = dateStartI; i <= dateEndI; i += 1) {\n      let col = this.computeCol(i, resourceI)\n\n      segs.push({\n        firstCol: col,\n        lastCol: col,\n        isStart: i === dateStartI,\n        isEnd: i === dateEndI,\n      })\n    }\n\n    return segs\n  }\n}\n","import { SlicedProps, Seg, memoize, EventSegUiInteractionState } from '@fullcalendar/common'\nimport { __assign } from 'tslib'\nimport { AbstractResourceDayTableModel } from './AbstractResourceDayTableModel'\n\nconst NO_SEGS = [] // for memoizing\n\nexport abstract class VResourceJoiner<SegType extends Seg> {\n  private joinDateSelection = memoize(this.joinSegs)\n  private joinBusinessHours = memoize(this.joinSegs)\n  private joinFgEvents = memoize(this.joinSegs)\n  private joinBgEvents = memoize(this.joinSegs)\n  private joinEventDrags = memoize(this.joinInteractions)\n  private joinEventResizes = memoize(this.joinInteractions)\n\n  /*\n  propSets also has a '' key for things with no resource\n  */\n  joinProps(\n    propSets: { [resourceId: string]: SlicedProps<SegType> },\n    resourceDayTable: AbstractResourceDayTableModel,\n  ): SlicedProps<SegType> {\n    let dateSelectionSets = []\n    let businessHoursSets = []\n    let fgEventSets = []\n    let bgEventSets = []\n    let eventDrags = []\n    let eventResizes = []\n    let eventSelection = ''\n    let keys = resourceDayTable.resourceIndex.ids.concat(['']) // add in the all-resource key\n\n    for (let key of keys) {\n      let props = propSets[key]\n\n      dateSelectionSets.push(props.dateSelectionSegs)\n      businessHoursSets.push(key ? props.businessHourSegs : NO_SEGS) // don't include redundant all-resource businesshours\n      fgEventSets.push(key ? props.fgEventSegs : NO_SEGS) // don't include fg all-resource segs\n      bgEventSets.push(props.bgEventSegs)\n      eventDrags.push(props.eventDrag)\n      eventResizes.push(props.eventResize)\n      eventSelection = eventSelection || props.eventSelection\n    }\n\n    return {\n      dateSelectionSegs: this.joinDateSelection(resourceDayTable, ...dateSelectionSets),\n      businessHourSegs: this.joinBusinessHours(resourceDayTable, ...businessHoursSets),\n      fgEventSegs: this.joinFgEvents(resourceDayTable, ...fgEventSets),\n      bgEventSegs: this.joinBgEvents(resourceDayTable, ...bgEventSets),\n      eventDrag: this.joinEventDrags(resourceDayTable, ...eventDrags),\n      eventResize: this.joinEventResizes(resourceDayTable, ...eventResizes),\n      eventSelection,\n    }\n  }\n\n  joinSegs(resourceDayTable: AbstractResourceDayTableModel, ...segGroups: SegType[][]): SegType[] {\n    let resourceCnt = resourceDayTable.resources.length\n    let transformedSegs = []\n\n    for (let i = 0; i < resourceCnt; i += 1) {\n      for (let seg of segGroups[i]) {\n        transformedSegs.push(\n          ...this.transformSeg(seg, resourceDayTable, i),\n        )\n      }\n\n      for (let seg of segGroups[resourceCnt]) { // one beyond. the all-resource\n        transformedSegs.push(\n          ...this.transformSeg(seg, resourceDayTable, i),\n        )\n      }\n    }\n\n    return transformedSegs\n  }\n\n  /*\n  for expanding non-resource segs to all resources.\n  only for public use.\n  no memoizing.\n  */\n  expandSegs(resourceDayTable: AbstractResourceDayTableModel, segs: SegType[]) {\n    let resourceCnt = resourceDayTable.resources.length\n    let transformedSegs = []\n\n    for (let i = 0; i < resourceCnt; i += 1) {\n      for (let seg of segs) {\n        transformedSegs.push(\n          ...this.transformSeg(seg, resourceDayTable, i),\n        )\n      }\n    }\n\n    return transformedSegs\n  }\n\n  joinInteractions(\n    resourceDayTable: AbstractResourceDayTableModel,\n    ...interactions: EventSegUiInteractionState[]\n  ): EventSegUiInteractionState | null {\n    let resourceCnt = resourceDayTable.resources.length\n    let affectedInstances = {}\n    let transformedSegs = []\n    let anyInteractions = false\n    let isEvent = false\n\n    for (let i = 0; i < resourceCnt; i += 1) {\n      let interaction = interactions[i]\n\n      if (interaction) {\n        anyInteractions = true\n\n        for (let seg of interaction.segs) {\n          transformedSegs.push(\n            ...this.transformSeg(seg as SegType, resourceDayTable, i), // TODO: templateify Interaction::segs\n          )\n        }\n\n        __assign(affectedInstances, interaction.affectedInstances)\n        isEvent = isEvent || interaction.isEvent\n      }\n\n      if (interactions[resourceCnt]) { // one beyond. the all-resource\n        for (let seg of interactions[resourceCnt].segs) {\n          transformedSegs.push(\n            ...this.transformSeg(seg as SegType, resourceDayTable, i), // TODO: templateify Interaction::segs\n          )\n        }\n      }\n    }\n\n    if (anyInteractions) {\n      return {\n        affectedInstances,\n        segs: transformedSegs,\n        isEvent,\n      }\n    }\n\n    return null\n  }\n\n  // needs to generate NEW seg obj!!! because of .el\n  abstract transformSeg(seg: SegType, resourceDayTable: AbstractResourceDayTableModel, resourceI: number): SegType[]\n}\n","import { EventDef, mapHash, Splitter, SplittableProps, DateSpan } from '@fullcalendar/common'\nimport { __assign } from 'tslib'\nimport { AbstractResourceDayTableModel } from './AbstractResourceDayTableModel'\n\n// splitter\n\nexport interface VResourceProps extends SplittableProps {\n  resourceDayTableModel: AbstractResourceDayTableModel\n}\n\n/*\nTODO: just use ResourceHash somehow? could then use the generic ResourceSplitter\n*/\nexport class VResourceSplitter extends Splitter<VResourceProps> {\n  getKeyInfo(props: VResourceProps) {\n    let { resourceDayTableModel } = props\n\n    let hash = mapHash(\n      resourceDayTableModel.resourceIndex.indicesById,\n      (i) => resourceDayTableModel.resources[i], // has `ui` AND `businessHours` keys!\n    ) as any // :(\n\n    hash[''] = {}\n\n    return hash\n  }\n\n  getKeysForDateSpan(dateSpan: DateSpan): string[] {\n    return [dateSpan.resourceId || '']\n  }\n\n  getKeysForEventDef(eventDef: EventDef): string[] {\n    let resourceIds = eventDef.resourceIds\n\n    if (!resourceIds.length) {\n      return ['']\n    }\n\n    return resourceIds\n  }\n}\n","import { flexibleCompare, compareByFieldSpecs, OrderSpec } from '@fullcalendar/common'\nimport { ResourceHash, Resource } from '../structs/resource'\nimport { ResourceEntityExpansions } from '../reducers/resourceEntityExpansions'\nimport { GroupSpec } from './resource-spec'\nimport { ResourceApi } from '../api/ResourceApi'\n\ninterface ParentNode {\n  children: ParentNode[]\n}\n\ninterface ResourceParentNode extends ParentNode {\n  resource: Resource\n  resourceFields: any\n}\n\ntype ResourceNodeHash = { [resourceId: string]: ResourceParentNode }\n\ninterface GroupParentNode extends ParentNode {\n  group: Group\n}\n\nexport interface Group {\n  value: any\n  spec: GroupSpec\n}\n\nexport interface GroupNode {\n  id: string // 'field:value'\n  isExpanded: boolean\n  group: Group\n}\n\nexport interface ResourceNode {\n  id: string // 'resourceId' (won't collide with group ID's because has colon)\n  rowSpans: number[]\n  depth: number\n  isExpanded: boolean\n  hasChildren: boolean\n  resource: Resource\n  resourceFields: any\n}\n\n/*\ndoesn't accept grouping\n*/\nexport function flattenResources(resourceStore: ResourceHash, orderSpecs: OrderSpec<ResourceApi>[]): Resource[] {\n  return buildRowNodes(resourceStore, [], orderSpecs, false, {}, true)\n    .map((node) => (node as ResourceNode).resource)\n}\n\nexport function buildRowNodes(\n  resourceStore: ResourceHash,\n  groupSpecs: GroupSpec[],\n  orderSpecs: OrderSpec<ResourceApi>[],\n  isVGrouping: boolean,\n  expansions: ResourceEntityExpansions,\n  expansionDefault: boolean,\n): (GroupNode | ResourceNode)[] {\n  let complexNodes = buildHierarchy(resourceStore, isVGrouping ? -1 : 1, groupSpecs, orderSpecs)\n  let flatNodes = []\n\n  flattenNodes(complexNodes, flatNodes, isVGrouping, [], 0, expansions, expansionDefault)\n\n  return flatNodes\n}\n\nfunction flattenNodes(\n  complexNodes: ParentNode[],\n  res, isVGrouping, rowSpans, depth,\n  expansions: ResourceEntityExpansions,\n  expansionDefault: boolean,\n) {\n  for (let i = 0; i < complexNodes.length; i += 1) {\n    let complexNode = complexNodes[i]\n    let group = (complexNode as GroupParentNode).group\n\n    if (group) {\n      if (isVGrouping) {\n        let firstRowIndex = res.length\n        let rowSpanIndex = rowSpans.length\n\n        flattenNodes(complexNode.children, res, isVGrouping, rowSpans.concat(0), depth, expansions, expansionDefault)\n\n        if (firstRowIndex < res.length) {\n          let firstRow = res[firstRowIndex]\n          let firstRowSpans = firstRow.rowSpans = firstRow.rowSpans.slice()\n\n          firstRowSpans[rowSpanIndex] = res.length - firstRowIndex\n        }\n      } else {\n        let id = group.spec.field + ':' + group.value\n        let isExpanded = expansions[id] != null ? expansions[id] : expansionDefault\n\n        res.push({ id, group, isExpanded })\n\n        if (isExpanded) {\n          flattenNodes(complexNode.children, res, isVGrouping, rowSpans, depth + 1, expansions, expansionDefault)\n        }\n      }\n    } else if ((complexNode as ResourceParentNode).resource) {\n      let id = (complexNode as ResourceParentNode).resource.id\n      let isExpanded = expansions[id] != null ? expansions[id] : expansionDefault\n\n      res.push({\n        id,\n        rowSpans,\n        depth,\n        isExpanded,\n        hasChildren: Boolean(complexNode.children.length),\n        resource: (complexNode as ResourceParentNode).resource,\n        resourceFields: (complexNode as ResourceParentNode).resourceFields,\n      })\n\n      if (isExpanded) {\n        flattenNodes(complexNode.children, res, isVGrouping, rowSpans, depth + 1, expansions, expansionDefault)\n      }\n    }\n  }\n}\n\nfunction buildHierarchy(\n  resourceStore: ResourceHash,\n  maxDepth: number,\n  groupSpecs: GroupSpec[],\n  orderSpecs: OrderSpec<ResourceApi>[],\n): ParentNode[] {\n  let resourceNodes = buildResourceNodes(resourceStore, orderSpecs)\n  let builtNodes: ParentNode[] = []\n\n  for (let resourceId in resourceNodes) {\n    let resourceNode = resourceNodes[resourceId]\n\n    if (!resourceNode.resource.parentId) {\n      insertResourceNode(resourceNode, builtNodes, groupSpecs, 0, maxDepth, orderSpecs)\n    }\n  }\n\n  return builtNodes\n}\n\nfunction buildResourceNodes(resourceStore: ResourceHash, orderSpecs: OrderSpec<ResourceApi>[]): ResourceNodeHash {\n  let nodeHash: ResourceNodeHash = {}\n\n  for (let resourceId in resourceStore) {\n    let resource = resourceStore[resourceId]\n\n    nodeHash[resourceId] = {\n      resource,\n      resourceFields: buildResourceFields(resource),\n      children: [],\n    }\n  }\n\n  for (let resourceId in resourceStore) {\n    let resource = resourceStore[resourceId]\n\n    if (resource.parentId) {\n      let parentNode = nodeHash[resource.parentId]\n\n      if (parentNode) {\n        insertResourceNodeInSiblings(nodeHash[resourceId], parentNode.children, orderSpecs)\n      }\n    }\n  }\n\n  return nodeHash\n}\n\nfunction insertResourceNode(\n  resourceNode: ResourceParentNode,\n  nodes: ParentNode[],\n  groupSpecs: GroupSpec[],\n  depth: number,\n  maxDepth: number,\n  orderSpecs: OrderSpec<ResourceApi>[],\n) {\n  if (groupSpecs.length && (maxDepth === -1 || depth <= maxDepth)) {\n    let groupNode = ensureGroupNodes(resourceNode, nodes, groupSpecs[0])\n\n    insertResourceNode(resourceNode, groupNode.children, groupSpecs.slice(1), depth + 1, maxDepth, orderSpecs)\n  } else {\n    insertResourceNodeInSiblings(resourceNode, nodes, orderSpecs)\n  }\n}\n\nfunction ensureGroupNodes(resourceNode: ResourceParentNode, nodes: ParentNode[], groupSpec: GroupSpec): GroupParentNode {\n  let groupValue = resourceNode.resourceFields[groupSpec.field]\n  let groupNode\n  let newGroupIndex\n\n  // find an existing group that matches, or determine the position for a new group\n  if (groupSpec.order) {\n    for (newGroupIndex = 0; newGroupIndex < nodes.length; newGroupIndex += 1) {\n      let node = nodes[newGroupIndex]\n\n      if ((node as GroupParentNode).group) {\n        let cmp = flexibleCompare(groupValue, (node as GroupParentNode).group.value) * groupSpec.order\n\n        if (cmp === 0) {\n          groupNode = node\n          break\n        } else if (cmp < 0) {\n          break\n        }\n      }\n    }\n  } else { // the groups are unordered\n    for (newGroupIndex = 0; newGroupIndex < nodes.length; newGroupIndex += 1) {\n      let node = nodes[newGroupIndex]\n\n      if ((node as GroupParentNode).group && groupValue === (node as GroupParentNode).group.value) {\n        groupNode = node\n        break\n      }\n    }\n  }\n\n  if (!groupNode) {\n    groupNode = {\n      group: {\n        value: groupValue,\n        spec: groupSpec,\n      },\n      children: [],\n    }\n\n    nodes.splice(newGroupIndex, 0, groupNode)\n  }\n\n  return groupNode\n}\n\nfunction insertResourceNodeInSiblings(resourceNode, siblings, orderSpecs: OrderSpec<ResourceApi>[]) {\n  let i\n\n  for (i = 0; i < siblings.length; i += 1) {\n    let cmp = compareByFieldSpecs(siblings[i].resourceFields, resourceNode.resourceFields, orderSpecs) // TODO: pass in ResourceApi?\n\n    if (cmp > 0) { // went 1 past. insert at i\n      break\n    }\n  }\n\n  siblings.splice(i, 0, resourceNode)\n}\n\nexport function buildResourceFields(resource: Resource) {\n  let obj = { ...resource.extendedProps, ...resource.ui, ...resource }\n\n  delete obj.ui\n  delete obj.extendedProps\n\n  return obj\n}\n\nexport function isGroupsEqual(group0: Group, group1: Group) {\n  return group0.spec === group1.spec && group0.value === group1.value\n}\n","import { createPlugin } from '@fullcalendar/common'\n\nimport premiumCommonPlugin from '@fullcalendar/premium-common' // eslint-disable-line import/no-duplicates\n// ensure ambient declarations\nimport '@fullcalendar/premium-common' // eslint-disable-line import/no-duplicates\n\nimport './ambient'\nimport { ResourceDataAdder, transformIsDraggable } from './View' // TODO: ResourceDataAdder should be own plugin\nimport { ResourceEventConfigAdder } from './ResourceEventConfigAdder'\nimport { reduceResources, ResourceState } from './reducers/resources'\nimport { generateEventDefResourceMembers, EVENT_REFINERS } from './structs/event-parse'\nimport './structs/event-declare'\nimport { massageEventDragMutation, applyEventDefMutation, transformEventDrop } from './EventDragging'\nimport { transformDateSelectionJoin } from './DateSelecting'\nimport { transformDatePoint, transformDateSpan } from './api/CalendarApi-extend'\nimport './api/CalendarApi-declare'\nimport { isPropsValidWithResources } from './validation'\nimport { transformExternalDef } from './ExternalElementDragging'\nimport './api/EventApi-extend'\nimport './api/EventApi-declare'\nimport { optionChangeHandlers } from './option-change-handlers'\nimport { handleResourceStore } from './resources-crud'\nimport { OPTION_REFINERS, LISTENER_REFINERS } from './options'\nimport './options-declare'\n\n// TODO: plugin-ify\nimport './resource-sources/resource-array'\nimport './resource-sources/resource-func'\nimport './resource-sources/resource-json-feed'\n\nexport { ResourceLaneContentArg, ResourceLaneHookPropsInput } from './render-hooks'\n\nexport * from './api-type-deps'\nexport { DEFAULT_RESOURCE_ORDER } from './resources-crud'\n\nexport default createPlugin({\n  deps: [\n    premiumCommonPlugin,\n  ],\n  reducers: [\n    reduceResources,\n  ],\n  isLoadingFuncs: [\n    (state: ResourceState) => state.resourceSource && state.resourceSource.isFetching,\n  ],\n  eventRefiners: EVENT_REFINERS,\n  eventDefMemberAdders: [generateEventDefResourceMembers],\n  isDraggableTransformers: [transformIsDraggable],\n  eventDragMutationMassagers: [massageEventDragMutation],\n  eventDefMutationAppliers: [applyEventDefMutation],\n  dateSelectionTransformers: [transformDateSelectionJoin],\n  datePointTransforms: [transformDatePoint],\n  dateSpanTransforms: [transformDateSpan],\n  viewPropsTransformers: [ResourceDataAdder, ResourceEventConfigAdder],\n  isPropsValid: isPropsValidWithResources,\n  externalDefTransforms: [transformExternalDef],\n  eventDropTransformers: [transformEventDrop],\n  optionChangeHandlers,\n  optionRefiners: OPTION_REFINERS,\n  listenerRefiners: LISTENER_REFINERS,\n  propSetHandlers: { resourceStore: handleResourceStore },\n})\n\nexport { ResourceDayHeader } from './common/ResourceDayHeader'\nexport { AbstractResourceDayTableModel } from './common/AbstractResourceDayTableModel'\nexport { ResourceDayTableModel } from './common/ResourceDayTableModel'\nexport { DayResourceTableModel } from './common/DayResourceTableModel'\nexport { VResourceJoiner } from './common/VResourceJoiner'\nexport { VResourceSplitter } from './common/VResourceSplitter'\nexport { Resource, ResourceHash, getPublicId } from './structs/resource'\nexport { ResourceViewProps } from './View'\nexport {\n  flattenResources,\n  Group,\n  isGroupsEqual,\n  GroupNode,\n  ResourceNode,\n  buildRowNodes,\n  buildResourceFields,\n} from './common/resource-hierarchy'\nexport {\n  ColSpec,\n  GroupSpec,\n  GroupLaneRenderHooks,\n  ColCellContentArg,\n  ColCellMountArg,\n  ColHeaderContentArg,\n  ColHeaderMountArg,\n  ColHeaderRenderHooks,\n} from './common/resource-spec'\nexport { ResourceApi } from './api/ResourceApi'\nexport { ResourceSplitter } from './common/ResourceSplitter'\nexport { ResourceLabelRoot, ResourceLabelRootProps } from './common/ResourceLabelRoot'\n"],"names":[],"mappings":";;;;;;;;;SAEgB,wBAAwB,CAAC,aAA4B,EAAE,IAAS,EAAE,IAAS;IACzF,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAA;IACxC,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAA;IAExC,IACE,SAAS,IAAI,SAAS;QACtB,SAAS,KAAK,SAAS,EACvB;QACA,aAAa,CAAC,gBAAgB,GAAG;YAC/B,eAAe,EAAE,SAAS;YAC1B,aAAa,EAAE,SAAS;SACzB,CAAA;KACF;AACH,CAAC;AAED;;;SAGgB,qBAAqB,CAAC,QAAkB,EAAE,QAAuB,EAAE,OAAwB;IACzG,IAAI,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAA;IAEhD,IAAI,gBAAgB,IAAI,uBAAuB,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAE;QAClE,IAAI,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAA;QAE1E,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,IAAI,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,CAAA;YAE9C,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;YAE5B,IAAI,WAAW,CAAC,OAAO,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC9D,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAA;aACjD;YAED,QAAQ,CAAC,WAAW,GAAG,WAAW,CAAA;SACnC;KACF;AACH,CAAC;AAED;;;;SAIgB,uBAAuB,CAAC,QAAkB,EAAE,OAAwB;IAC5E,IAAA,gBAAgB,GAAK,QAAQ,iBAAb,CAAa;IAEnC,IAAI,gBAAgB,IAAI,IAAI,EAAE;QAC5B,IAAI,MAAM,GAAG,QAAQ,CAAC,QAAQ,IAAI,OAAO,CAAC,cAAc,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;QAE1F,IAAI,MAAM,EAAE;YACV,gBAAgB,GAAG,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAA;SACzD;QAED,IAAI,gBAAgB,IAAI,IAAI,EAAE;YAC5B,gBAAgB,GAAG,OAAO,CAAC,OAAO,CAAC,qBAAqB,CAAA;YAExD,IAAI,gBAAgB,IAAI,IAAI,EAAE;gBAC5B,gBAAgB,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAA;aAC5C;SACF;KACF;IAED,OAAO,gBAAgB,CAAA;AACzB,CAAC;SAEe,kBAAkB,CAAC,QAAuB,EAAE,OAAwB;IAC5E,IAAA,gBAAgB,GAAK,QAAQ,iBAAb,CAAa;IAEnC,IAAI,gBAAgB,EAAE;QACd,IAAA,WAAW,GAAK,OAAO,YAAZ,CAAY;QAE7B,OAAO;YACL,WAAW,EAAE,WAAW,CAAC,eAAe,CAAC,gBAAgB,CAAC,eAAe,CAAC;YAC1E,WAAW,EAAE,WAAW,CAAC,eAAe,CAAC,gBAAgB,CAAC,aAAa,CAAC;SACzE,CAAA;KACF;IAED,OAAO;QACL,WAAW,EAAE,IAAI;QACjB,WAAW,EAAE,IAAI;KAClB,CAAA;AACH;;AClEA;IAAA;QACE,oBAAe,GAAG,OAAO,CAAC,eAAe,CAAC,CAAA;KAgB3C;IAdC,qCAAS,GAAT,UAAU,SAAoB,EAAE,aAAmC;QACjE,IAAI,aAAa,CAAC,QAAQ,CAAC,cAAc,CAAC,iBAAiB,EAAE;YAC3D,OAAO;gBACL,aAAa,EAAE,IAAI,CAAC,eAAe,CACjC,aAAa,CAAC,aAAa,EAC3B,aAAa,CAAC,OAAO,CAAC,yBAAyB,EAC/C,aAAa,CAAC,UAAU,EACxB,aAAa,CAAC,WAAW,CAAC,WAAW,CACtC;gBACD,wBAAwB,EAAE,aAAa,CAAC,wBAAwB;aACjE,CAAA;SACF;QACD,OAAO,IAAI,CAAA;KACZ;IACH,wBAAC;AAAD,CAAC,IAAA;AAED,SAAS,eAAe,CACtB,aAA2B,EAC3B,2BAAoC,EACpC,UAAsB,EACtB,WAAsB;IAEtB,IAAI,2BAA2B,EAAE;QAC/B,IAAI,gBAAgB,GAAG,2BAA2B,CAAC,UAAU,CAAC,SAAS,EAAE,WAAW,CAAC,CAAA;QACrF,IAAI,WAAS,GAAG,gBAAgB,CAAC,gBAAgB,EAAE,UAAU,CAAC,IAAI,CAAC,CAAA;QAEnE,QAAQ,CAAC,WAAS,EAAE,wBAAwB,CAAC,WAAS,EAAE,aAAa,CAAC,CAAC,CAAA;QAEvE,OAAO,UAAU,CAAC,aAAa,EAAE,UAAC,QAAQ,EAAE,UAAU,IAAK,OAAA,WAAS,CAAC,UAAU,CAAC,GAAA,CAAC,CAAA;KAClF;IAED,OAAO,aAAa,CAAA;AACtB,CAAC;AAED,SAAS,2BAA2B,CAAC,cAAiC,EAAE,WAAsB;IAC5F,OAAO,UAAU,CAAC,cAAc,EAAE,UAAC,aAAa,IAAK,OAAA,eAAe,CAAC,aAAa,CAAC,KAAK,EAAE,WAAW,CAAC,GAAA,CAAC,CAAA;AACzG,CAAC;AAED,SAAS,gBAAgB,CAAC,cAAiC,EAAE,SAAuB;IAClF,IAAI,SAAS,GAAG,EAAE,CAAA;IAElB,KAAK,IAAI,UAAU,IAAI,cAAc,EAAE;QACrC,IAAI,QAAQ,GAAG,cAAc,CAAC,UAAU,CAAC,CAAA;QAEzC,KAAuB,UAAqC,EAArC,KAAA,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,WAAW,EAArC,cAAqC,EAArC,IAAqC,EAAE;YAAzD,IAAI,UAAU,SAAA;YACjB,SAAS,CAAC,UAAU,CAAC,GAAG,IAAI,CAAA;SAC7B;KACF;IAED,OAAO,SAAS,CAAA;AAClB,CAAC;AAED;;;;AAIA,SAAS,wBAAwB,CAAC,SAA4C,EAAE,aAA2B;IACzG,IAAI,GAAG,GAAG,EAAE,CAAA;IAEZ,KAAK,IAAI,UAAU,IAAI,SAAS,EAAE;QAChC,IAAI,QAAQ,SAAA,CAAA;QAEZ,QAAQ,QAAQ,GAAG,aAAa,CAAC,UAAU,CAAC,GAAG;YAC7C,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAA;YAE9B,IAAI,UAAU,EAAE;gBACd,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI,CAAA;aACvB;iBAAM;gBACL,MAAK;aACN;SACF;KACF;IAED,OAAO,GAAG,CAAA;AACZ,CAAC;AAED;;;SAGgB,oBAAoB,CAAC,GAAY,EAAE,QAAkB,EAAE,OAAgB,EAAE,OAAwB;IAC/G,IAAI,CAAC,GAAG,EAAE;QACR,IAAI,KAAK,GAAG,OAAO,CAAC,cAAc,EAAE,CAAA;QACpC,IAAI,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,eAAe,CAAC,CAAA;QAErD,IAAI,QAAQ,CAAC,cAAc,CAAC,iBAAiB,EAAE;YAC7C,IAAI,uBAAuB,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAE;gBAC9C,OAAO,IAAI,CAAA;aACZ;SACF;KACF;IAED,OAAO,GAAG,CAAA;AACZ;;ACxGA;AAEA;IAAA;QACE,0BAAqB,GAAG,OAAO,CAAC,qBAAqB,EAAE,YAAY,CAAC,CAAA;QACpE,2BAAsB,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAA;KAczD;IAZC,4CAAS,GAAT,UAAU,SAAoB,EAAE,aAAmC;QACjE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,cAAc,CAAC,iBAAiB,EAAE;YAC5D,OAAO;gBACL,YAAY,EAAE,IAAI,CAAC,sBAAsB,CACvC,SAAS,CAAC,YAAY,EACtB,SAAS,CAAC,UAAU,CAAC,IAAI,EACzB,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,aAAa,CAAC,CACxD;aACF,CAAA;SACF;QACD,OAAO,IAAI,CAAA;KACZ;IACH,+BAAC;AAAD,CAAC,IAAA;AAED,SAAS,qBAAqB,CAAC,aAA2B;IACxD,OAAO,OAAO,CAAC,aAAa,EAAE,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,EAAE,GAAA,CAAC,CAAA;AAC1D,CAAC;AAED,SAAS,sBAAsB,CAAC,YAAyB,EAAE,SAAuB,EAAE,gBAA6B;IAC/G,OAAO,OAAO,CAAC,YAAY,EAAE,UAAC,OAAO,EAAE,KAAK;QAC1C,IAAI,KAAK,EAAE;YACT,OAAO,qBAAqB,CAAC,OAAO,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,gBAAgB,CAAC,CAAA;SAC1E;QACD,OAAO,OAAO,CAAA;KACf,CAAC,CAAA;AACJ,CAAC;AAED,SAAS,qBAAqB,CAAC,WAAoB,EAAE,QAAkB,EAAE,gBAA6B;IACpG,IAAI,KAAK,GAAG,EAAE,CAAA;;IAGd,KAAuB,UAAoB,EAApB,KAAA,QAAQ,CAAC,WAAW,EAApB,cAAoB,EAApB,IAAoB,EAAE;QAAxC,IAAI,UAAU,SAAA;QACjB,IAAI,gBAAgB,CAAC,UAAU,CAAC,EAAE;YAChC,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAA;SAC5C;KACF;IAED,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAA;IAE1B,OAAO,eAAe,CAAC,KAAK,CAAC,CAAA;AAC/B;;AC5CA,IAAI,IAAI,GAA6B,EAAE,CAAA;SAEvB,yBAAyB,CAAqB,GAA0C;IACtG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;AAChB,CAAC;SAEe,oBAAoB,CAAC,EAAU;IAC7C,OAAO,IAAI,CAAC,EAAE,CAAC,CAAA;AACjB,CAAC;SAEe,qBAAqB;IACnC,OAAO,IAAI,CAAA;AACb;;ACfA;AACA;AACO,IAAM,wBAAwB,GAAG;IACtC,EAAE,EAAE,MAAM;;IAGV,SAAS,EAAE,QAAoD;;IAG/D,GAAG,EAAE,MAAM;IACX,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,MAAM;IAClB,QAAQ,EAAE,MAAM;IAChB,aAAa,EAAE,MAAM;IACrB,WAAW,EAAE,QAAqD;CACnE,CAAA;SAWe,mBAAmB,CAAC,KAA0B;IAC5D,IAAI,QAAmC,CAAA;IAEvC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC7B,QAAQ,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAA;KAC1B;SAAM,IAAI,OAAO,KAAK,KAAK,UAAU,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QAC9D,QAAQ,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,CAAA;KAChC;SAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,EAAE;QAC7C,QAAQ,GAAG,KAAK,CAAA;KACjB;IAED,IAAI,QAAQ,EAAE;QACR,IAAA,KAAqB,WAAW,CAAC,QAAQ,EAAE,wBAAwB,CAAC,EAAlE,OAAO,aAAA,EAAE,KAAK,WAAoD,CAAA;QAExE,gBAAgB,CAAC,KAAK,CAAC,CAAA;QAEvB,IAAI,OAAO,GAAG,uBAAuB,CAAC,OAAO,CAAC,CAAA;QAE9C,IAAI,OAAO,EAAE;YACX,OAAO;gBACL,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE,IAAI,EAAE;gBAChB,WAAW,EAAE,OAAO,CAAC,WAAW;gBAChC,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,QAAQ,EAAE,OAAO,CAAC,EAAE,IAAI,EAAE;gBAC1B,UAAU,EAAE,KAAK;gBACjB,aAAa,EAAE,EAAE;gBACjB,UAAU,EAAE,IAAI;aACjB,CAAA;SACF;KACF;IAED,OAAO,IAAI,CAAA;AACb,CAAC;AAED,SAAS,uBAAuB,CAAC,OAA8B;IAC7D,IAAI,IAAI,GAAG,qBAAqB,EAAE,CAAA;IAElC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;QAC5C,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;QACjB,IAAI,IAAI,GAAG,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;QAEjC,IAAI,IAAI,EAAE;YACR,OAAO,EAAE,IAAI,MAAA,EAAE,WAAW,EAAE,CAAC,EAAE,CAAA;SAChC;KACF;IAED,OAAO,IAAI,CAAA;AACb,CAAC;AAED,SAAS,gBAAgB,CAAC,KAAK;IAC7B,KAAK,IAAI,QAAQ,IAAI,KAAK,EAAE;QAC1B,OAAO,CAAC,IAAI,CAAC,4BAA0B,QAAQ,MAAG,CAAC,CAAA;KACpD;AACH;;SChFgB,oBAAoB,CAClC,MAAkC,EAClC,MAA6B,EAC7B,OAAuD;IAEjD,IAAA,OAAO,GAAkB,OAAO,QAAzB,EAAE,WAAW,GAAK,OAAO,YAAZ,CAAY;IAEtC,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE;QACtB,OAAO,YAAY,CACjB,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,SAAS,EAC7C,WAAW,CAAC,WAAW,EACvB,OAAO,CAAC,0BAA0B,EAClC,OAAO,CACR,CAAA;KACF;IAED,QAAQ,MAAM,CAAC,IAAI;QACjB,KAAK,uBAAuB;YAC1B,OAAO,YAAY,CAAC,MAAM,CAAC,mBAAmB,EAAE,WAAW,CAAC,WAAW,EAAE,OAAO,CAAC,0BAA0B,EAAE,OAAO,CAAC,CAAA;QAEvH,KAAK,MAAM,CAAC;QACZ,KAAK,MAAM,CAAC;QACZ,KAAK,aAAa,CAAC;QACnB,KAAK,kBAAkB;YACrB,OAAO,iBAAiB,CAAC,MAAM,EAAE,WAAW,CAAC,WAAW,EAAE,OAAO,CAAC,0BAA0B,EAAE,OAAO,CAAC,CAAA;QAExG,KAAK,mBAAmB,CAAC;QACzB,KAAK,wBAAwB;YAC3B,OAAO,eAAe,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,UAAU,CAAC,CAAA;QAEnE,KAAK,mBAAmB;YACtB,OAAO,WAAW,CAAC,MAAM,EAAE,WAAW,CAAC,WAAW,EAAE,OAAO,CAAC,CAAA;QAE9D;YACE,OAAO,MAAM,CAAA;KAChB;AACH,CAAC;AAED,SAAS,YAAY,CAAC,KAAK,EAAE,WAAsB,EAAE,0BAA0B,EAAE,OAAwB;IACvG,IAAI,KAAK,EAAE;QACT,IAAI,MAAM,GAAG,mBAAmB,CAAC,KAAK,CAAC,CAAA;QACvC,MAAM,GAAG,WAAW,CAAC,MAAM,EAAE,0BAA0B,GAAG,WAAW,GAAG,IAAI,EAAE,OAAO,CAAC,CAAA;QACtF,OAAO,MAAM,CAAA;KACd;IAED,OAAO,IAAI,CAAA;AACb,CAAC;AAED,SAAS,iBAAiB,CACxB,MAA2B,EAC3B,WAAsB,EACtB,0BAA0B,EAC1B,OAAwB;IAExB,IACE,0BAA0B;QAC1B,CAAC,qBAAqB,CAAC,MAAM,CAAC;SAC7B,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC,EACpE;QACA,OAAO,WAAW,CAAC,MAAM,EAAE,WAAW,EAAE,OAAO,CAAC,CAAA;KACjD;IACD,OAAO,MAAM,CAAA;AACf,CAAC;AAED,SAAS,qBAAqB,CAAC,MAA2B;IACxD,OAAO,OAAO,CAAC,oBAAoB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,CAAA;AACtE,CAAC;AAED,SAAS,WAAW,CAAC,MAA2B,EAAE,UAA4B,EAAE,OAAwB;IACtG,IAAI,SAAS,GAAG,oBAAoB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAA;IACxD,IAAI,OAAO,GAAG,IAAI,EAAE,CAAA;IAEpB,SAAS,CAAC,KAAK,CACb;QACE,cAAc,EAAE,MAAM;QACtB,KAAK,EAAE,UAAU;QACjB,OAAO,SAAA;KACR,EACD,UAAC,GAAG;QACF,OAAO,CAAC,QAAQ,CAAC;YACf,IAAI,EAAE,mBAAmB;YACzB,OAAO,SAAA;YACP,UAAU,YAAA;YACV,YAAY,EAAE,GAAG,CAAC,YAAY;SAC/B,CAAC,CAAA;KACH,EACD,UAAC,KAAK;QACJ,OAAO,CAAC,QAAQ,CAAC;YACf,IAAI,EAAE,wBAAwB;YAC9B,OAAO,SAAA;YACP,UAAU,YAAA;YACV,KAAK,OAAA;SACN,CAAC,CAAA;KACH,CACF,CAAA;IAED,6BACK,MAAM,KACT,UAAU,EAAE,IAAI,EAChB,aAAa,EAAE,OAAO,IACvB;AACH,CAAC;AAED,SAAS,eAAe,CAAC,MAA2B,EAAE,OAAe,EAAE,UAAqB;IAC1F,IAAI,OAAO,KAAK,MAAM,CAAC,aAAa,EAAE;QACpC,6BACK,MAAM,KACT,UAAU,EAAE,KAAK,EACjB,UAAU,YAAA,IACX;KACF;IAED,OAAO,MAAM,CAAA;AACf;;AClHA,IAAM,iBAAiB,GAAG,MAAM,CAAA;AAEhC,IAAM,iBAAiB,GAAG;IACxB,EAAE,EAAE,MAAM;IACV,QAAQ,EAAE,MAAM;IAChB,QAAQ,EAAE,QAAqC;IAC/C,KAAK,EAAE,MAAM;IACb,aAAa,EAAE,QAAwC;IACvD,aAAa,EAAE,QAAgC;;IAG/C,aAAa,EAAE,OAAO;IACtB,kBAAkB,EAAE,OAAO;IAC3B,qBAAqB,EAAE,OAAO;IAC9B,eAAe,EAAE,QAAqC;IACtD,YAAY,EAAE,OAAO;IACrB,UAAU,EAAE,QAA+B;IAC3C,eAAe,EAAE,eAAe;IAChC,oBAAoB,EAAE,MAAM;IAC5B,gBAAgB,EAAE,MAAM;IACxB,cAAc,EAAE,MAAM;IACtB,UAAU,EAAE,MAAM;CACnB,CAAA;AAuBD;;;SAGgB,aAAa,CAAC,GAAkB,EAAE,QAAqB,EAAE,KAAmB,EAAE,OAAwB;IAApE,yBAAA,EAAA,aAAqB;IACjE,IAAA,KAAqB,WAAW,CAAC,GAAG,EAAE,iBAAiB,CAAC,EAAtD,OAAO,aAAA,EAAE,KAAK,WAAwC,CAAA;IAE5D,IAAI,QAAQ,GAAa;QACvB,EAAE,EAAE,OAAO,CAAC,EAAE,KAAK,iBAAiB,GAAG,IAAI,EAAE,CAAC;QAC9C,QAAQ,EAAE,OAAO,CAAC,QAAQ,IAAI,QAAQ;QACtC,KAAK,EAAE,OAAO,CAAC,KAAK,IAAI,EAAE;QAC1B,aAAa,EAAE,OAAO,CAAC,aAAa,GAAG,kBAAkB,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,GAAG,IAAI;QAChG,EAAE,EAAE,aAAa,CAAC;YAChB,QAAQ,EAAE,OAAO,CAAC,aAAa;YAC/B,aAAa,EAAE,OAAO,CAAC,kBAAkB;YACzC,gBAAgB,EAAE,OAAO,CAAC,qBAAqB;YAC/C,UAAU,EAAE,OAAO,CAAC,eAAe;YACnC,OAAO,EAAE,OAAO,CAAC,YAAY;YAC7B,KAAK,EAAE,OAAO,CAAC,UAAU;YACzB,UAAU,EAAE,OAAO,CAAC,eAAe;YACnC,eAAe,EAAE,OAAO,CAAC,oBAAoB;YAC7C,WAAW,EAAE,OAAO,CAAC,gBAAgB;YACrC,SAAS,EAAE,OAAO,CAAC,cAAc;YACjC,KAAK,EAAE,OAAO,CAAC,UAAU;SAC1B,EAAE,OAAO,CAAC;QACX,aAAa,wBACR,KAAK,GACL,OAAO,CAAC,aAAa,CACzB;KACF,CAAA;;IAGD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC,CAAA;IACrC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAA;IAErC,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAGvB;SAAM;QACL,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAA;QAE7B,IAAI,OAAO,CAAC,QAAQ,EAAE;YACpB,KAAuB,UAAgB,EAAhB,KAAA,OAAO,CAAC,QAAQ,EAAhB,cAAgB,EAAhB,IAAgB,EAAE;gBAApC,IAAI,UAAU,SAAA;gBACjB,aAAa,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;aACvD;SACF;KACF;IAED,OAAO,QAAQ,CAAA;AACjB,CAAC;AAED;;;SAGgB,WAAW,CAAC,EAAU;IACpC,IAAI,EAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;QACvC,OAAO,EAAE,CAAA;KACV;IAED,OAAO,EAAE,CAAA;AACX;;SCxGgB,mBAAmB,CACjC,KAA0B,EAC1B,MAA6B,EAC7B,MAA2B,EAC3B,OAAwB;IAExB,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,EAAE;QACrB,OAAO,EAAE,CAAA;KACV;IAED,QAAQ,MAAM,CAAC,IAAI;QACjB,KAAK,mBAAmB;YACtB,OAAO,mBAAmB,CAAC,KAAK,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAA;QAEzF,KAAK,cAAc;YACjB,OAAO,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,YAAY,CAAC,CAAA;QAEhD,KAAK,iBAAiB;YACpB,OAAO,cAAc,CAAC,KAAK,EAAE,MAAM,CAAC,UAAU,CAAC,CAAA;QAEjD,KAAK,mBAAmB;YACtB,OAAO,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,SAAS,CAAC,CAAA;QAErF,KAAK,4BAA4B;YAC/B,OAAO,uBAAuB,CAAC,KAAK,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,SAAS,CAAC,CAAA;QAE7F;YACE,OAAO,KAAK,CAAA;KACf;AACH,CAAC;AAED,SAAS,mBAAmB,CAC1B,aAA2B,EAC3B,MAAuB,EACvB,OAAe,EACf,MAA2B,EAC3B,OAAwB;IAExB,IAAI,MAAM,CAAC,aAAa,KAAK,OAAO,EAAE;QACpC,IAAI,SAAS,GAAiB,EAAE,CAAA;QAEhC,KAAkB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM,EAAE;YAArB,IAAI,KAAK,eAAA;YACZ,aAAa,CAAC,KAAK,EAAE,EAAE,EAAE,SAAS,EAAE,OAAO,CAAC,CAAA;SAC7C;QAED,OAAO,SAAS,CAAA;KACjB;IAED,OAAO,aAAa,CAAA;AACtB,CAAC;AAED,SAAS,WAAW,CAAC,aAA2B,EAAE,SAAuB;;IAGvE,6BAAY,aAAa,GAAK,SAAS,EAAE;AAC3C,CAAC;AAED,SAAS,cAAc,CAAC,aAA2B,EAAE,UAAkB;IACrE,IAAI,QAAQ,GAAG,aAAK,aAAa,CAAkB,CAAA;IAEnD,OAAO,QAAQ,CAAC,UAAU,CAAC,CAAA;;IAG3B,KAAK,IAAI,eAAe,IAAI,QAAQ,EAAE;QACpC,IAAI,QAAQ,CAAC,eAAe,CAAC,CAAC,QAAQ,KAAK,UAAU,EAAE;YACrD,QAAQ,CAAC,eAAe,CAAC,yBACpB,QAAQ,CAAC,eAAe,CAAC,KAC5B,QAAQ,EAAE,EAAE,GACb,CAAA;SACF;KACF;IAED,OAAO,QAAQ,CAAA;AACjB,CAAC;AAED,SAAS,eAAe,CAAC,aAA2B,EAAE,UAAkB,EAAE,IAAY,EAAE,KAAU;;IAChG,IAAI,gBAAgB,GAAG,aAAa,CAAC,UAAU,CAAC,CAAA;;IAIhD,IAAI,gBAAgB,EAAE;QACpB,6BACK,aAAa,gBACf,UAAU,0BACN,gBAAgB,gBAClB,IAAI,IAAG,KAAK,aAEhB;KACF;IAED,OAAO,aAAa,CAAA;AACtB,CAAC;AAED,SAAS,uBAAuB,CAAC,aAA2B,EAAE,UAAkB,EAAE,IAAY,EAAE,KAAU;;IACxG,IAAI,gBAAgB,GAAG,aAAa,CAAC,UAAU,CAAC,CAAA;IAEhD,IAAI,gBAAgB,EAAE;QACpB,6BACK,aAAa,gBACf,UAAU,0BACN,gBAAgB,KACnB,aAAa,wBACR,gBAAgB,CAAC,aAAa,gBAChC,IAAI,IAAG,KAAK,gBAGlB;KACF;IAED,OAAO,aAAa,CAAA;AACtB;;SC/GgB,8BAA8B,CAC5C,UAA2C,EAC3C,MAA6B;;IAE7B,IAAI,CAAC,UAAU,IAAI,CAAC,MAAM,EAAE;QAC1B,OAAO,EAAE,CAAA;KACV;IAED,QAAQ,MAAM,CAAC,IAAI;QACjB,KAAK,8BAA8B;YACjC,6BACK,UAAU,gBACZ,MAAM,CAAC,EAAE,IAAG,MAAM,CAAC,UAAU,OAC/B;QAEH;YACE,OAAO,UAAU,CAAA;KACpB;AACH;;SCRgB,eAAe,CAC7B,KAA2B,EAC3B,MAA6B,EAC7B,OAAuD;IAEvD,IAAI,cAAc,GAAG,oBAAoB,CAAC,KAAK,IAAI,KAAK,CAAC,cAAc,EAAE,MAAM,EAAE,OAAO,CAAC,CAAA;IACzF,IAAI,aAAa,GAAG,mBAAmB,CAAC,KAAK,IAAI,KAAK,CAAC,aAAa,EAAE,MAAM,EAAE,cAAc,EAAE,OAAO,CAAC,CAAA;IACtG,IAAI,wBAAwB,GAAG,8BAA8B,CAAC,KAAK,IAAI,KAAK,CAAC,wBAAwB,EAAE,MAAM,CAAC,CAAA;IAE9G,OAAO;QACL,cAAc,gBAAA;QACd,aAAa,eAAA;QACb,wBAAwB,0BAAA;KACzB,CAAA;AACH;;AC1BO,IAAM,cAAc,GAAG;IAC5B,UAAU,EAAE,MAAM;IAClB,WAAW,EAAE,QAA8B;IAC3C,gBAAgB,EAAE,OAAO;CAC1B,CAAA;SAEe,+BAA+B,CAAC,OAAqB;IACnE,OAAO;QACL,WAAW,EAAE,iBAAiB,CAAC,OAAO,CAAC,WAAW,CAAC;aAChD,MAAM,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;QACzD,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;KAC3C,CAAA;AACH,CAAC;AAED,SAAS,iBAAiB,CAAC,KAAY;IACrC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,MAAM,CAAC,IAAI,CAAC,GAAA,CAAC,CAAA;AAClD;;SChBgB,0BAA0B,CAAC,IAAS,EAAE,IAAS;IAC7D,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAA;IAC1C,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAA;IAE1C,IAAI,WAAW,IAAI,WAAW,EAAE;QAC9B,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,CAAA;KACnC;IAED,OAAO,IAAI,CAAA;AACb;;;ICNE,qBACU,QAAyB,EAC1B,SAAmB;QADlB,aAAQ,GAAR,QAAQ,CAAiB;QAC1B,cAAS,GAAT,SAAS,CAAU;KAE3B;IAED,6BAAO,GAAP,UAAQ,IAAY,EAAE,KAAU;QAC9B,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAA;QAEhC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACrB,IAAI,EAAE,mBAAmB;YACzB,UAAU,EAAE,WAAW,CAAC,EAAE;YAC1B,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,KAAK;SACjB,CAAC,CAAA;QAEF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;KACvB;IAED,qCAAe,GAAf,UAAgB,IAAY,EAAE,KAAU;QACtC,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAA;QAEhC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACrB,IAAI,EAAE,4BAA4B;YAClC,UAAU,EAAE,WAAW,CAAC,EAAE;YAC1B,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,KAAK;SACjB,CAAC,CAAA;QAEF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;KACvB;IAEO,0BAAI,GAAZ,UAAa,WAAqB;QAChC,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAA;QAC3B,IAAI,UAAU,GAAG,WAAW,CAAC,EAAE,CAAA;;QAG/B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,cAAc,EAAE,CAAC,aAAa,CAAC,UAAU,CAAC,CAAA;QAEnE,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE;YACxC,WAAW,EAAE,IAAI,WAAW,CAAC,OAAO,EAAE,WAAW,CAAC;YAClD,QAAQ,EAAE,IAAI;YACd,MAAM;;gBACJ,OAAO,CAAC,QAAQ,CAAC;oBACf,IAAI,EAAE,cAAc;oBACpB,YAAY;wBACV,GAAC,UAAU,IAAG,WAAW;2BAC1B;iBACF,CAAC,CAAA;aACH;SACF,CAAC,CAAA;KACH;IAED,4BAAM,GAAN;QACE,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAA;QAC3B,IAAI,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAA;QACrC,IAAI,UAAU,GAAG,gBAAgB,CAAC,EAAE,CAAA;QAEpC,OAAO,CAAC,QAAQ,CAAC;YACf,IAAI,EAAE,iBAAiB;YACvB,UAAU,YAAA;SACX,CAAC,CAAA;QAEF,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE;YACxC,QAAQ,EAAE,IAAI;YACd,MAAM;;gBACJ,OAAO,CAAC,QAAQ,CAAC;oBACf,IAAI,EAAE,cAAc;oBACpB,YAAY;wBACV,GAAC,UAAU,IAAG,gBAAgB;2BAC/B;iBACF,CAAC,CAAA;aACH;SACF,CAAC,CAAA;KACH;IAED,+BAAS,GAAT;QACE,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAA;QAC3B,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAA;QAEtC,IAAI,QAAQ,EAAE;YACZ,OAAO,IAAI,WAAW,CACpB,OAAO,EACP,OAAO,CAAC,cAAc,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,CAClD,CAAA;SACF;QAED,OAAO,IAAI,CAAA;KACZ;IAED,iCAAW,GAAX;QACE,IAAI,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAA;QACtC,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAA;QACrB,IAAA,aAAa,GAAK,OAAO,CAAC,cAAc,EAAE,cAA7B,CAA6B;QAChD,IAAI,SAAS,GAAkB,EAAE,CAAA;QAEjC,KAAK,IAAI,UAAU,IAAI,aAAa,EAAE;YACpC,IAAI,aAAa,CAAC,UAAU,CAAC,CAAC,QAAQ,KAAK,cAAc,EAAE;gBACzD,SAAS,CAAC,IAAI,CACZ,IAAI,WAAW,CAAC,OAAO,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC,CACpD,CAAA;aACF;SACF;QAED,OAAO,SAAS,CAAA;KACjB;;;;;IAMD,+BAAS,GAAT;QACE,IAAI,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAA;QACtC,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAA;QACvB,IAAA,KAAsB,OAAO,CAAC,cAAc,EAAE,CAAC,UAAU,EAAvD,IAAI,UAAA,EAAE,SAAS,eAAwC,CAAA;QAC7D,IAAI,SAAS,GAAe,EAAE,CAAA;QAE9B,KAAK,IAAI,UAAU,IAAI,SAAS,EAAE;YAChC,IAAI,QAAQ,GAAG,SAAS,CAAC,UAAU,CAAC,CAAA;YACpC,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;YAE9B,IAAI,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,EAAE;gBAClD,SAAS,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAA;aACrD;SACF;QAED,OAAO,SAAS,CAAA;KACjB;IAED,sBAAI,2BAAE;aAAN,cAAW,OAAO,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA,EAAE;;;OAAA;IAClD,sBAAI,8BAAK;aAAT,cAAc,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAA,EAAE;;;OAAA;IAC3C,sBAAI,wCAAe;aAAnB,cAAwB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,IAAI,CAAA,EAAE;;;OAAA;IACzE,sBAAI,qCAAY;aAAhB,cAAqB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAA,EAAE;;;OAAA;IACvD,sBAAI,mCAAU;aAAd,cAAmB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAA,EAAE;;;OAAA;IAC/D,sBAAI,6CAAoB;aAAxB,cAA6B,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,eAAe,CAAA,EAAE;;;OAAA;IACvE,sBAAI,yCAAgB;aAApB,cAAyB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,WAAW,CAAA,EAAE;;;OAAA;IAC/D,sBAAI,uCAAc;aAAlB,cAAuB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAA,EAAE;;;OAAA;IAG3D,sBAAI,wCAAe;;aAAnB,cAAwB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,UAAU,CAAA,EAAE;;;OAAA;IAC7D,sBAAI,sCAAa;aAAjB,cAAsB,OAAO,IAAI,CAAC,SAAS,CAAC,aAAa,CAAA,EAAE;;;OAAA;IAE3D,mCAAa,GAAb,UAAc,QAAgF;QAAhF,yBAAA,EAAA,aAAgF;QAC5F,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAA;QACvB,IAAA,EAAE,GAAK,QAAQ,GAAb,CAAa;QACrB,IAAI,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAA;QACtB,IAAI,GAAG,GAAe,EAAE,CAAA;QAExB,IAAI,QAAQ,EAAE;YACZ,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAA;SAClB;QAED,IAAI,QAAQ,CAAC,KAAK,EAAE;YAClB,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAA;SAC3B;QAED,IAAI,QAAQ,CAAC,kBAAkB,IAAI,EAAE,CAAC,eAAe,IAAI,EAAE,CAAC,eAAe,KAAK,EAAE,CAAC,WAAW,EAAE;YAC9F,GAAG,CAAC,UAAU,GAAG,EAAE,CAAC,eAAe,CAAA;SACpC;aAAM;YACL,IAAI,EAAE,CAAC,eAAe,EAAE;gBACtB,GAAG,CAAC,oBAAoB,GAAG,EAAE,CAAC,eAAe,CAAA;aAC9C;YACD,IAAI,EAAE,CAAC,WAAW,EAAE;gBAClB,GAAG,CAAC,gBAAgB,GAAG,EAAE,CAAC,WAAW,CAAA;aACtC;SACF;QAED,IAAI,EAAE,CAAC,SAAS,EAAE;YAChB,GAAG,CAAC,cAAc,GAAG,EAAE,CAAC,SAAS,CAAA;SAClC;QAED,IAAI,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE;YACxB,GAAG,CAAC,eAAe,GAAG,EAAE,CAAC,UAAU,CAAA;SACpC;QAED,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE;YAC9C,IAAI,QAAQ,CAAC,qBAAqB,EAAE;gBAClC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,aAAa,CAAC,CAAA;aACtC;iBAAM;gBACL,GAAG,CAAC,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAA;aAC3C;SACF;QAED,OAAO,GAAG,CAAA;KACX;IAED,4BAAM,GAAN;QACE,OAAO,IAAI,CAAC,aAAa,EAAE,CAAA;KAC5B;IACH,kBAAC;AAAD,CAAC,IAAA;SAEe,iBAAiB,CAAC,aAA2B,EAAE,OAAwB;IACrF,IAAI,YAAY,GAAkB,EAAE,CAAA;IAEpC,KAAK,IAAI,UAAU,IAAI,aAAa,EAAE;QACpC,YAAY,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,OAAO,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;KACvE;IAED,OAAO,YAAY,CAAA;AACrB;;ACxMA,WAAW,CAAC,SAAS,CAAC,WAAW,GAAG,UAElC,KAAkC,EAClC,QAAe;;IAHmB,iBAwCnC;IArCC,yBAAA,EAAA,eAAe;IAEf,IAAI,YAAY,GAAG,IAAI,CAAC,cAAc,EAAE,CAAA;IACxC,IAAI,YAA0B,CAAA;IAC9B,IAAI,QAAkB,CAAA;IAEtB,IAAI,KAAK,YAAY,WAAW,EAAE;QAChC,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAA;QAC1B,YAAY,aAAK,GAAC,QAAQ,CAAC,EAAE,IAAG,QAAQ,KAAE,CAAA;KAC3C;SAAM;QACL,YAAY,GAAG,EAAE,CAAA;QACjB,QAAQ,GAAG,aAAa,CAAC,KAAK,EAAE,EAAE,EAAE,YAAY,EAAE,YAAY,CAAC,CAAA;KAChE;IAED,IAAI,CAAC,QAAQ,CAAC;QACZ,IAAI,EAAE,cAAc;QACpB,YAAY,cAAA;KACb,CAAC,CAAA;IAEF,IAAI,QAAQ,EAAE;;QAEZ,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,UAAU,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAA;KAC5D;IAED,IAAI,WAAW,GAAG,IAAI,WAAW,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAA;IAEzD,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,EAAE;QAC1C,QAAQ,EAAE,WAAW;QACrB,MAAM,EAAE;YACN,KAAI,CAAC,QAAQ,CAAC;gBACZ,IAAI,EAAE,iBAAiB;gBACvB,UAAU,EAAE,QAAQ,CAAC,EAAE;aACxB,CAAC,CAAA;SACH;KACF,CAAC,CAAA;IAEF,OAAO,WAAW,CAAA;AACpB,CAAC,CAAA;AAED,WAAW,CAAC,SAAS,CAAC,eAAe,GAAG,UAA6B,EAAU;IAC7E,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,CAAA;IACf,IAAI,YAAY,GAAG,IAAI,CAAC,cAAc,EAAE,CAAA;IAExC,IAAI,YAAY,CAAC,aAAa,EAAE;QAC9B,IAAI,WAAW,GAAG,YAAY,CAAC,aAAa,CAAC,EAAE,CAAC,CAAA;QAEhD,IAAI,WAAW,EAAE;YACf,OAAO,IAAI,WAAW,CAAC,YAAY,EAAE,WAAW,CAAC,CAAA;SAClD;KACF;IAED,OAAO,IAAI,CAAA;AACb,CAAC,CAAA;AAED,WAAW,CAAC,SAAS,CAAC,YAAY,GAAG;IACnC,IAAI,YAAY,GAAG,IAAI,CAAC,cAAc,EAAE,CAAA;IAClC,IAAA,aAAa,GAAK,YAAY,cAAjB,CAAiB;IACpC,IAAI,YAAY,GAAkB,EAAE,CAAA;IAEpC,IAAI,aAAa,EAAE;QACjB,KAAK,IAAI,UAAU,IAAI,aAAa,EAAE;YACpC,YAAY,CAAC,IAAI,CACf,IAAI,WAAW,CAAC,YAAY,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC,CACzD,CAAA;SACF;KACF;IAED,OAAO,YAAY,CAAA;AACrB,CAAC,CAAA;AAED,WAAW,CAAC,SAAS,CAAC,oBAAoB,GAAG;IAC3C,IAAI,YAAY,GAAG,IAAI,CAAC,cAAc,EAAE,CAAA;IAClC,IAAA,aAAa,GAAK,YAAY,cAAjB,CAAiB;IACpC,IAAI,YAAY,GAAkB,EAAE,CAAA;IAEpC,IAAI,aAAa,EAAE;QACjB,KAAK,IAAI,UAAU,IAAI,aAAa,EAAE;YACpC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE;gBACvC,YAAY,CAAC,IAAI,CACf,IAAI,WAAW,CAAC,YAAY,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC,CACzD,CAAA;aACF;SACF;KACF;IAED,OAAO,YAAY,CAAA;AACrB,CAAC,CAAA;AAED,WAAW,CAAC,SAAS,CAAC,gBAAgB,GAAG;IACvC,IAAI,CAAC,QAAQ,CAAC;QACZ,IAAI,EAAE,mBAAmB;KAC1B,CAAC,CAAA;AACJ,CAAC,CAAA;SAEe,kBAAkB,CAAC,QAAkB,EAAE,OAAwB;IAC7E,OAAO,QAAQ,CAAC,UAAU;QACxB,EAAE,QAAQ,EAAE,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;QACtE,EAAE,CAAA;AACN,CAAC;SAEe,iBAAiB,CAAC,QAAkB,EAAE,OAAwB;IAC5E,OAAO,QAAQ,CAAC,UAAU;QACxB,EAAE,QAAQ,EAAE,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;QACtE,EAAE,CAAA;AACN;;ACxGA;;;;;IAIsC,oCAAiC;IAAvE;;KAqBC;IApBC,qCAAU,GAAV,UAAW,KAA8B;QACvC,kBACE,EAAE,EAAE,EAAE,IACH,KAAK,CAAC,aAAa,EACvB;KACF;IAED,6CAAkB,GAAlB,UAAmB,QAAkB;QACnC,OAAO,CAAC,QAAQ,CAAC,UAAU,IAAI,EAAE,CAAC,CAAA;KACnC;IAED,6CAAkB,GAAlB,UAAmB,QAAkB;QACnC,IAAI,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAA;QAEtC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YACvB,OAAO,CAAC,EAAE,CAAC,CAAA;SACZ;QAED,OAAO,WAAW,CAAA;KACnB;IACH,uBAAC;AAAD,CArBA,CAAsC,QAAQ;;SCR9B,yBAAyB,CAAC,aAA8B,EAAE,OAAwB;IAChG,IAAI,QAAQ,GAAG,IAAI,gBAAgB,EAAE,CAAA;IAErC,IAAI,IAAI,GAAG,QAAQ,CAAC,UAAU,uBACzB,aAAa,KAChB,aAAa,EAAE,OAAO,CAAC,cAAc,EAAE,CAAC,aAAa,IACrD,CAAA;IAEF,KAAK,IAAI,UAAU,IAAI,IAAI,EAAE;QAC3B,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAA;;QAG5B,IAAI,UAAU,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE;YAC1B,KAAK,yBACA,KAAK,KACR,UAAU,EAAE,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,EACnE,YAAY,wBAAO,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,GAAK,KAAK,CAAC,YAAY,IAChE,CAAA;SACF;QAED,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE,UAAU,YAAA,EAAE,EAAE,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE;YACtF,OAAO,KAAK,CAAA;SACb;KACF;IAED,OAAO,IAAI,CAAA;AACb,CAAC;AAED,SAAS,YAAY,CAAC,UAAU,EAAE,MAAe;IAC/C,6BACK,MAAM,KACT,WAAW,EAAE,iBAAiB,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC,IAC/D;AACH,CAAC;AAED,SAAS,iBAAiB,CAAC,UAAkB,EAAE,WAAyB;IACtE,OAAO,WAAW,CAAC,GAAG,CAAC,UAAC,UAAU;QAChC,IAAI,IAAI,GAAI,UAAyB,CAAC,IAAI,CAAA;QAC1C,IAAI,IAAI,EAAE;;;YAGR,KAAK,IAAI,KAAK,IAAI,IAAI,EAAE;gBACtB,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,CAAA;gBACzC,IAAI,WAAW,CAAC,MAAM,IAAI,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;oBAChE,OAAO,KAAK,CAAA;iBACb;aACF;SACF;QAED,OAAO,UAAU,CAAA;KAClB,CAAC,CAAA;AACJ;;SCpDgB,oBAAoB,CAAC,QAAkB;IACrD,OAAO,QAAQ,CAAC,UAAU;QACxB,EAAE,UAAU,EAAE,QAAQ,CAAC,UAAU,EAAE;QACnC,EAAE,CAAA;AACN;;ACHA,QAAQ,CAAC,SAAS,CAAC,YAAY,GAAG;IAC1B,IAAA,WAAW,GAAK,IAAI,CAAC,QAAQ,YAAlB,CAAkB;IAEnC,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAC,UAAU,IAAK,OAAA,WAAW,CAAC,eAAe,CAAC,UAAU,CAAC,GAAA,CAAC,CAAA;AAC3F,CAAC,CAAA;AAED,QAAQ,CAAC,SAAS,CAAC,YAAY,GAAG,UAEhC,SAAmC;IAEnC,IAAI,WAAW,GAAG,EAAE,CAAA;;IAGpB,KAAqB,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS,EAAE;QAA3B,IAAI,QAAQ,kBAAA;QACf,IAAI,UAAU,GAAG,IAAI,CAAA;QAErB,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;YAChC,UAAU,GAAG,QAAQ,CAAA;SACtB;aAAM,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;YACvC,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAA;SAC9B;aAAM,IAAI,QAAQ,YAAY,WAAW,EAAE;YAC1C,UAAU,GAAG,QAAQ,CAAC,EAAE,CAAA;SACzB;aAAM;YACL,OAAO,CAAC,IAAI,CAAC,yBAAyB,GAAG,QAAQ,CAAC,CAAA;SACnD;QAED,IAAI,UAAU,EAAE;YACd,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;SAC7B;KACF;IAED,IAAI,CAAC,MAAM,CAAC;QACV,aAAa,EAAE;YACb,WAAW,aAAA;SACZ;KACF,CAAC,CAAA;AACJ,CAAC;;ACrCM,IAAM,oBAAoB,GAAG;IAClC,SAAS,EAAE,eAAe;CAC3B,CAAA;AAED,SAAS,eAAe,CAAC,cAAc,EAAE,OAAwB;IAC/D,IAAI,cAAc,GAAG,OAAO,CAAC,cAAc,EAAE,CAAC,cAAc,CAAC,IAAI,CAAA;IAEjE,IAAI,cAAc,KAAK,cAAc,EAAE;QACrC,OAAO,CAAC,QAAQ,CAAC;YACf,IAAI,EAAE,uBAAuB;YAC7B,mBAAmB,EAAE,cAAc;SACpC,CAAC,CAAA;KACH;AACH;;ICXa,sBAAsB,GAAG,eAAe,CAAC,UAAU,EAAC;SAkBjD,mBAAmB,CAAC,aAA2B,EAAE,YAA0B;IACnF,IAAA,OAAO,GAAK,YAAY,QAAjB,CAAiB;IAE9B,IAAI,OAAO,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE;QACvC,OAAO,CAAC,OAAO,CAAC,cAAc,EAAE,iBAAiB,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC,CAAA;KAChF;AACH;;ACXO,IAAM,eAAe,GAAG;IAC7B,gBAAgB,EAAE,QAAyC;IAC3D,SAAS,EAAE,QAAyC;IAEpD,qBAAqB,EAAE,OAAO;IAC9B,0BAA0B,EAAE,OAAO;IACnC,aAAa,EAAE,eAAe;IAC9B,yBAAyB,EAAE,OAAO;IAClC,kBAAkB,EAAE,MAAM;IAC1B,iBAAiB,EAAE,QAAiC;IACpD,mBAAmB,EAAE,QAA+B;IACpD,0BAA0B,EAAE,OAAO;IACnC,mBAAmB,EAAE,OAAO;IAC5B,iBAAiB,EAAE,OAAO;IAE1B,4BAA4B,EAAE,QAA8D;IAC5F,yBAAyB,EAAE,QAAiE;IAC5F,0BAA0B,EAAE,QAAwD;IACpF,6BAA6B,EAAE,QAA2D;IAE1F,4BAA4B,EAAE,QAA4D;IAC1F,yBAAyB,EAAE,QAA+D;IAC1F,0BAA0B,EAAE,QAAsD;IAClF,6BAA6B,EAAE,QAAyD;IAExF,uBAAuB,EAAE,QAAkE;IAC3F,oBAAoB,EAAE,QAAqE;IAC3F,qBAAqB,EAAE,QAA4D;IACnF,wBAAwB,EAAE,QAA+D;IAEzF,sBAAsB,EAAE,QAAiE;IACzF,mBAAmB,EAAE,QAAoE;IACzF,oBAAoB,EAAE,QAA2D;IACjF,uBAAuB,EAAE,QAA8D;IAEvF,2BAA2B,EAAE,QAA4D;IACzF,wBAAwB,EAAE,QAA+D;IACzF,yBAAyB,EAAE,QAAsD;IACjF,4BAA4B,EAAE,QAAyD;CACxF,CAAA;AAEM,IAAM,iBAAiB,GAAG;IAC/B,YAAY,EAAE,QAAwD;IACtE,WAAW,EAAE,QAAmD;IAChE,cAAc,EAAE,QAAsD;IACtE,cAAc,EAAE,QAAsD;CACvE;;AC3DD,yBAAyB,CAAkB;IAEzC,WAAW,EAAE,IAAI;IAEjB,SAAS,EAAT,UAAU,OAA8B;QACtC,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YACpC,OAAO,OAAO,CAAC,SAAS,CAAA;SACzB;QACD,OAAO,IAAI,CAAA;KACZ;IAED,KAAK,YAAC,GAAG,EAAE,eAAe;QACxB,eAAe,CAAC;YACd,YAAY,EAAE,GAAG,CAAC,cAAc,CAAC,IAAI;SACtC,CAAC,CAAA;KACH;CAEF,CAAC;;ACDF,yBAAyB,CAAe;IAEtC,SAAS,EAAT,UAAU,OAA8B;QACtC,IAAI,OAAO,OAAO,CAAC,SAAS,KAAK,UAAU,EAAE;YAC3C,OAAO,OAAO,CAAC,SAAS,CAAA;SACzB;QACD,OAAO,IAAI,CAAA;KACZ;IAED,KAAK,EAAL,UAAM,GAAG,EAAE,OAAO,EAAE,OAAO;QACzB,IAAI,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,CAAA;QACjC,IAAI,IAAI,GAAG,GAAG,CAAC,cAAc,CAAC,IAAI,CAAA;QAElC,IAAI,SAAS,GAAoB,GAAG,CAAC,KAAK,GAAG;YAC3C,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;YACtC,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;YAClC,QAAQ,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;YAC5C,MAAM,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;YACxC,QAAQ,EAAE,OAAO,CAAC,QAAQ;SAC3B,GAAG,EAAE,CAAA;;;QAIN,WAAW,CACT,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,EAC1B,UAAC,YAAY;YACX,OAAO,CAAC,EAAE,YAAY,cAAA,EAAE,CAAC,CAAA;SAC1B,EACD,OAAO,CACR,CAAA;KACF;CAEF,CAAC;;ACtCF,yBAAyB,CAAe;IAEtC,SAAS,EAAT,UAAU,OAA8B;QACtC,IAAI,OAAO,CAAC,GAAG,EAAE;YACf,OAAO;gBACL,GAAG,EAAE,OAAO,CAAC,GAAG;gBAChB,MAAM,EAAE,CAAC,OAAO,CAAC,MAAM,IAAI,KAAK,EAAE,WAAW,EAAE;gBAC/C,WAAW,EAAE,OAAO,CAAC,WAAW;aACjC,CAAA;SACF;QACD,OAAO,IAAI,CAAA;KACZ;IAED,KAAK,YAAC,GAAG,EAAE,eAAe,EAAE,eAAe;QACzC,IAAI,IAAI,GAAG,GAAG,CAAC,cAAc,CAAC,IAAI,CAAA;QAClC,IAAI,aAAa,GAAG,kBAAkB,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,CAAA;QAEpE,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,aAAa,EAAE,UAAC,YAAY,EAAE,GAAG;YAClE,eAAe,CAAC,EAAE,YAAY,cAAA,EAAE,GAAG,KAAA,EAAE,CAAC,CAAA;SACvC,EAAE,UAAC,OAAO,EAAE,GAAG;YACd,eAAe,CAAC,EAAE,OAAO,SAAA,EAAE,GAAG,KAAA,EAAE,CAAC,CAAA;SAClC,CAAC,CAAA;KACH;CAEF,CAAC,CAAA;AAEF;AACA,SAAS,kBAAkB,CAAC,IAAkB,EAAE,KAAuB,EAAE,OAAwB;IACzF,IAAA,OAAO,GAAc,OAAO,QAArB,EAAE,OAAO,GAAK,OAAO,QAAZ,CAAY;IAClC,IAAI,UAAU,CAAA;IACd,IAAI,QAAQ,CAAA;IACZ,IAAI,aAAa,CAAA;IACjB,IAAI,mBAAmB,CAAA;IACvB,IAAI,MAAM,GAAG,EAAE,CAAA;IAEf,IAAI,KAAK,EAAE;QACT,UAAU,GAAG,IAAI,CAAC,UAAU,CAAA;QAC5B,IAAI,UAAU,IAAI,IAAI,EAAE;YACtB,UAAU,GAAG,OAAO,CAAC,UAAU,CAAA;SAChC;QAED,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;QACxB,IAAI,QAAQ,IAAI,IAAI,EAAE;YACpB,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAA;SAC5B;QAED,aAAa,GAAG,IAAI,CAAC,aAAa,CAAA;QAClC,IAAI,aAAa,IAAI,IAAI,EAAE;YACzB,aAAa,GAAG,OAAO,CAAC,aAAa,CAAA;SACtC;QAED,MAAM,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;QACnD,MAAM,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QAE/C,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAAE;YAChC,MAAM,CAAC,aAAa,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAA;SACzC;KACF;;IAGD,IAAI,OAAO,IAAI,CAAC,WAAW,KAAK,UAAU,EAAE;;QAE1C,mBAAmB,GAAG,IAAI,CAAC,WAAW,EAAE,CAAA;KACzC;SAAM;;QAEL,mBAAmB,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,CAAA;KAC7C;IAED,QAAQ,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAA;IAErC,OAAO,MAAM,CAAA;AACf;;AC1DA;SAEgB,iBAAiB,CAAC,KAA6B;IAC7D,QACE,cAAC,eAAe,CAAC,QAAQ,QACtB,UAAC,OAAoB;QACd,IAAA,OAAO,GAAK,OAAO,QAAZ,CAAY;QACzB,IAAI,SAAS,GAA4B;YACvC,QAAQ,EAAE,IAAI,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,QAAQ,CAAC;YAClD,IAAI,EAAE,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI;YAC5D,IAAI,EAAE,OAAO,CAAC,OAAO;SACtB,CAAA;QAED,IAAI,SAAS,GAAG;YACd,kBAAkB,EAAE,KAAK,CAAC,QAAQ,CAAC,EAAE;YACrC,WAAW,EAAE,KAAK,CAAC,IAAI,GAAG,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,SAAS;SAClE,CAAA;QAED,QACE,cAAC,UAAU,IACT,SAAS,EAAE,SAAS,EACpB,UAAU,EAAE,OAAO,CAAC,uBAAuB,EAC3C,OAAO,EAAE,OAAO,CAAC,oBAAoB,EACrC,cAAc,EAAE,kBAAkB,EAClC,QAAQ,EAAE,OAAO,CAAC,qBAAqB,EACvC,WAAW,EAAE,OAAO,CAAC,wBAAwB,IAE5C,UAAC,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,IAAK,OAAA,KAAK,CAAC,QAAQ,CAClE,SAAS,EACT,UAAU;QACV,SAAS,EACT,UAAU,EACV,YAAY,CACb,GAAA,CACU,EACd;KACF,CACwB,EAC5B;AACH,CAAC;AAED,SAAS,kBAAkB,CAAC,KAA8B;IACxD,OAAO,KAAK,CAAC,QAAQ,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAA;AAClD;;AC3DA;IAAkC,gCAAgC;IAAlE;;KA6BC;IA5BC,6BAAM,GAAN;QACQ,IAAA,KAAK,GAAK,IAAI,MAAT,CAAS;QAEpB,QACE,cAAC,iBAAiB,IAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,IAC1D,UAAC,KAAgC,EAAE,gBAA0B,EAAE,SAAS,EAAE,UAAU,EAAE,YAA+B,IAAK,QACzH,+BACE,GAAG,EAAE,KAAK,EACV,SAAS,EAAE,CAAC,oBAAoB,EAAE,aAAa,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EACnF,OAAO,EAAE,KAAK,CAAC,OAAO,IAClB,SAAS;YAEb,uBAAK,SAAS,EAAC,0BAA0B;gBACvC,wBACE,SAAS,EAAE;wBACT,4BAA4B;wBAC5B,KAAK,CAAC,QAAQ,GAAG,WAAW,GAAG,EAAE;qBAClC,CAAC,IAAI,CAAC,GAAG,CAAC,EACX,GAAG,EAAE,UAAU,IAEd,YAAY,CACR,CACH,CACH,IACN,CACiB,EACrB;KACF;IACH,mBAAC;AAAD,CA7BA,CAAkC,aAAa;;;ICMR,qCAAqC;IAA5E;QAAA,qEAsJC;QArJS,qBAAe,GAAG,OAAO,CAAC,eAAe,CAAC,CAAA;;KAqJnD;IAnJC,kCAAM,GAAN;QAAA,iBAqBC;QApBK,IAAA,KAAqB,IAAI,EAAvB,KAAK,WAAA,EAAE,OAAO,aAAS,CAAA;QAC7B,IAAI,UAAU,GAAG,IAAI,CAAC,eAAe,CACnC,OAAO,CAAC,OAAO,CAAC,eAAe,EAC/B,KAAK,CAAC,oBAAoB,EAC1B,KAAK,CAAC,KAAK,CAAC,MAAM,CACnB,CAAA;QAED,QACE,cAAC,QAAQ,IAAC,IAAI,EAAC,KAAK,IACjB,UAAC,OAAmB,EAAE,UAAqB;YAC1C,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC5B,OAAO,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;aAC/D;YACD,IAAI,OAAO,CAAC,OAAO,CAAC,mBAAmB,EAAE;gBACvC,OAAO,KAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,KAAK,EAAE,UAAU,EAAE,UAAU,EAAE,KAAK,CAAC,SAAS,CAAC,CAAA;aAC3F;YACD,OAAO,KAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,KAAK,EAAE,UAAU,EAAE,UAAU,CAAC,CAAA;SAC3F,CACQ,EACZ;KACF;IAED,6CAAiB,GAAjB,UAAkB,SAAqB,EAAE,IAAgB;QACvD,IAAI,aAAa,GAAG,SAAS,CAAC,GAAG,CAAC,UAAC,QAAQ,IAAK,QAC9C,cAAC,YAAY,IACX,GAAG,EAAE,QAAQ,CAAC,EAAE,EAChB,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,CAAC,EACV,IAAI,EAAE,IAAI,GACV,IACH,CAAC,CAAA;QACF,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,WAAW,CAAC,CAAA;KAChD;IAED,oDAAwB,GAAxB,UAAyB,KAAmB,EAAE,UAAyB,EAAE,UAAqB,EAAE,SAAqB;QACnH,IAAI,SAAS,GAAY,EAAE,CAAA;QAC3B,IAAI,aAAa,GAAY,EAAE,CAAA;QAE/B,KAAiB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE;YAAnB,IAAI,IAAI,cAAA;YACX,SAAS,CAAC,IAAI,CACZ,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAChF,CAAA;YAED,KAAqB,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS,EAAE;gBAA3B,IAAI,QAAQ,kBAAA;gBACf,aAAa,CAAC,IAAI,CAChB,cAAC,YAAY,IACX,GAAG,EAAE,QAAQ,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,EAC3C,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,CAAC,EACV,IAAI,EAAE,IAAI,GACV,CACH,CAAA;aACF;SACF;QAED,QACE,cAAC,QAAQ;YACN,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,WAAW,CAAC,CAChC,EACZ;KACF;IAED,oDAAwB,GAAxB,UAAyB,SAAqB,EAAE,KAAmB,EAAE,UAAyB,EAAE,UAAqB;QACnH,IAAI,aAAa,GAAY,EAAE,CAAA;QAC/B,IAAI,SAAS,GAAY,EAAE,CAAA;QAE3B,KAAqB,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS,EAAE;YAA3B,IAAI,QAAQ,kBAAA;YACf,aAAa,CAAC,IAAI,CAChB,cAAC,YAAY,IACX,GAAG,EAAE,QAAQ,CAAC,EAAE,EAChB,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,KAAK,CAAC,MAAM,EACrB,QAAQ,SACR,CACH,CAAA;YAED,KAAiB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE;gBAAnB,IAAI,IAAI,cAAA;gBACX,SAAS,CAAC,IAAI,CACZ,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,CAAC,CAC/D,CAAA;aACF;SACF;QAED,QACE,cAAC,QAAQ;YACN,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,WAAW,CAAC;YACxC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CACtB,EACZ;KACF;;IAGD,0CAAc,GAAd,UACE,IAAgB,EAChB,UAAyB,EACzB,UAAqB,EACrB,OAAe,EACf,QAAmB,EACnB,QAAkB;QAEZ,IAAA,KAAK,GAAK,IAAI,MAAT,CAAS;QACpB,IAAI,UAAU,GAAG,QAAQ,GAAG,MAAI,QAAQ,CAAC,EAAI,GAAG,EAAE,CAAA;QAClD,IAAI,cAAc,GAAG,QAAQ,GAAG,EAAE,QAAQ,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAA;QAC1F,IAAI,cAAc,GAAG,QAAQ,GAAG,EAAE,kBAAkB,EAAE,QAAQ,CAAC,EAAE,EAAE,GAAG,EAAE,CAAA;QAExE,OAAO,KAAK,CAAC,oBAAoB,IAC/B,cAAC,aAAa,IACZ,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE,GAAG,UAAU,EACpC,IAAI,EAAE,IAAI,EACV,WAAW,EAAE,KAAK,CAAC,WAAW,EAC9B,UAAU,EAAE,UAAU,EACtB,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,EACnD,eAAe,EAAE,UAAU,EAC3B,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,QAAQ,EAClB,cAAc,EAAE,cAAc,EAC9B,cAAc,EAAE,cAAc,GAC9B,KAEF,cAAC,YAAY;YACX,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,GAAG,UAAU,EAClC,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,EACrB,eAAe,EAAE,UAAU,EAC3B,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,QAAQ,EAClB,cAAc,EAAE,cAAc,EAC9B,cAAc,EAAE,cAAc,GAC9B,CACH,CAAA;KACF;IAED,mCAAO,GAAP,UAAQ,KAAc,EAAE,GAAW;QAC3B,IAAA,WAAW,GAAK,IAAI,CAAC,KAAK,YAAf,CAAe;QAEhC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACjB,KAAK,GAAG,CAAC,sBAAI,GAAG,EAAE,CAAC,aAAa,CAAC,CAAA;SAClC;QAED,QACE,sBAAI,GAAG,EAAE,GAAG;YACT,WAAW,IAAI,WAAW,CAAC,GAAG,CAAC;YAC/B,KAAK,CACH,EACN;KACF;IACH,wBAAC;AAAD,CAtJA,CAAuC,aAAa,GAsJnD;AAED,SAAS,eAAe,CAAC,eAA8B,EAAE,oBAAoB,EAAE,MAAM;IACnF,OAAO,eAAe,IAAI,2BAA2B,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAA;AACrF;;ACzKA;IAKE,uBAAY,SAAqB;QAC/B,IAAI,WAAW,GAAG,EAAE,CAAA;QACpB,IAAI,GAAG,GAAG,EAAE,CAAA;QAEZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;YAC5C,IAAI,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAA;YAExB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;YACZ,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;SACpB;QAED,IAAI,CAAC,GAAG,GAAG,GAAG,CAAA;QACd,IAAI,CAAC,WAAW,GAAG,WAAW,CAAA;QAC9B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAA;KAC/B;IACH,oBAAC;AAAD,CAAC;;;ICVC,uCACS,aAA4B,EAC5B,SAAqB,EACpB,OAAwB;QAFzB,kBAAa,GAAb,aAAa,CAAe;QAC5B,cAAS,GAAT,SAAS,CAAY;QACpB,YAAO,GAAP,OAAO,CAAiB;QAEhC,IAAI,CAAC,aAAa,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,CAAA;QACjD,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,MAAM,CAAA;QAClC,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAA;QACrD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,CAAA;KAC/B;IAUD,kDAAU,GAAV;QACM,IAAA,KAAuC,IAAI,EAAzC,MAAM,YAAA,EAAE,aAAa,mBAAA,EAAE,SAAS,eAAS,CAAA;QAC/C,IAAI,IAAI,GAAqB,EAAE,CAAA;QAE/B,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE;YACxC,IAAI,QAAQ,GAAmB,EAAE,CAAA;YAEjC,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,EAAE;gBAClE,KAAK,IAAI,WAAW,GAAG,CAAC,EAAE,WAAW,GAAG,SAAS,CAAC,MAAM,EAAE,WAAW,IAAI,CAAC,EAAE;oBAC1E,IAAI,QAAQ,GAAG,SAAS,CAAC,WAAW,CAAC,CAAA;oBACrC,IAAI,cAAc,GAAG,EAAE,QAAQ,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,CAAA;oBAC1E,IAAI,cAAc,GAAG,EAAE,kBAAkB,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAA;oBACxD,IAAI,eAAe,GAAG,CAAC,aAAa,CAAC,CAAA;oBACrC,IAAI,aAAa,GAAG,EAAE,UAAU,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAA;oBAC/C,IAAI,IAAI,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAA;oBAEjD,QAAQ,CACN,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,WAAW,CAAC,CACtC,GAAG;wBACF,GAAG,EAAE,QAAQ,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE;wBAC3C,IAAI,MAAA;wBACJ,cAAc,gBAAA;wBACd,cAAc,gBAAA;wBACd,eAAe,iBAAA;wBACf,aAAa,eAAA;qBACd,CAAA;iBACF;aACF;YAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;SACpB;QAED,OAAO,IAAI,CAAA;KACZ;IACH,oCAAC;AAAD,CAAC;;AC9DD;;;;IAG2C,yCAA6B;IAAxE;;KAkBC;IAjBC,0CAAU,GAAV,UAAW,KAAK,EAAE,SAAS;QACzB,OAAO,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,KAAK,CAAA;KACrD;;;;IAKD,gDAAgB,GAAhB,UAAiB,UAAU,EAAE,QAAQ,EAAE,SAAS;QAC9C,OAAO;YACL;gBACE,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,SAAS,CAAC;gBAChD,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,SAAS,CAAC;gBAC7C,OAAO,EAAE,IAAI;gBACb,KAAK,EAAE,IAAI;aACZ;SACF,CAAA;KACF;IACH,4BAAC;AAAD,CAlBA,CAA2C,6BAA6B;;ACHxE;;;;IAG2C,yCAA6B;IAAxE;;KAwBC;IAvBC,0CAAU,GAAV,UAAW,KAAK,EAAE,SAAS;QACzB,OAAO,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAA;KACjD;;;;IAKD,gDAAgB,GAAhB,UAAiB,UAAU,EAAE,QAAQ,EAAE,SAAS;QAC9C,IAAI,IAAI,GAAG,EAAE,CAAA;QAEb,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,IAAI,QAAQ,EAAE,CAAC,IAAI,CAAC,EAAE;YAC9C,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,SAAS,CAAC,CAAA;YAEvC,IAAI,CAAC,IAAI,CAAC;gBACR,QAAQ,EAAE,GAAG;gBACb,OAAO,EAAE,GAAG;gBACZ,OAAO,EAAE,CAAC,KAAK,UAAU;gBACzB,KAAK,EAAE,CAAC,KAAK,QAAQ;aACtB,CAAC,CAAA;SACH;QAED,OAAO,IAAI,CAAA;KACZ;IACH,4BAAC;AAAD,CAxBA,CAA2C,6BAA6B;;ACFxE,IAAM,OAAO,GAAG,EAAE,CAAA;;IAElB;QACU,sBAAiB,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAC1C,sBAAiB,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAC1C,iBAAY,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QACrC,iBAAY,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QACrC,mBAAc,GAAG,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAA;QAC/C,qBAAgB,GAAG,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAA;KAkI1D;;;;IA7HC,mCAAS,GAAT,UACE,QAAwD,EACxD,gBAA+C;QAE/C,IAAI,iBAAiB,GAAG,EAAE,CAAA;QAC1B,IAAI,iBAAiB,GAAG,EAAE,CAAA;QAC1B,IAAI,WAAW,GAAG,EAAE,CAAA;QACpB,IAAI,WAAW,GAAG,EAAE,CAAA;QACpB,IAAI,UAAU,GAAG,EAAE,CAAA;QACnB,IAAI,YAAY,GAAG,EAAE,CAAA;QACrB,IAAI,cAAc,GAAG,EAAE,CAAA;QACvB,IAAI,IAAI,GAAG,gBAAgB,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QAE1D,KAAgB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;YAAjB,IAAI,GAAG,aAAA;YACV,IAAI,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAA;YAEzB,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAA;YAC/C,iBAAiB,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,gBAAgB,GAAG,OAAO,CAAC,CAAA;YAC9D,WAAW,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC,CAAA;YACnD,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;YACnC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAA;YAChC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;YACpC,cAAc,GAAG,cAAc,IAAI,KAAK,CAAC,cAAc,CAAA;SACxD;QAED,OAAO;YACL,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,OAAtB,IAAI,kBAAmB,gBAAgB,GAAK,iBAAiB,EAAC;YACjF,gBAAgB,EAAE,IAAI,CAAC,iBAAiB,OAAtB,IAAI,kBAAmB,gBAAgB,GAAK,iBAAiB,EAAC;YAChF,WAAW,EAAE,IAAI,CAAC,YAAY,OAAjB,IAAI,kBAAc,gBAAgB,GAAK,WAAW,EAAC;YAChE,WAAW,EAAE,IAAI,CAAC,YAAY,OAAjB,IAAI,kBAAc,gBAAgB,GAAK,WAAW,EAAC;YAChE,SAAS,EAAE,IAAI,CAAC,cAAc,OAAnB,IAAI,kBAAgB,gBAAgB,GAAK,UAAU,EAAC;YAC/D,WAAW,EAAE,IAAI,CAAC,gBAAgB,OAArB,IAAI,kBAAkB,gBAAgB,GAAK,YAAY,EAAC;YACrE,cAAc,gBAAA;SACf,CAAA;KACF;IAED,kCAAQ,GAAR,UAAS,gBAA+C;QAAE,mBAAyB;aAAzB,UAAyB,EAAzB,qBAAyB,EAAzB,IAAyB;YAAzB,kCAAyB;;QACjF,IAAI,WAAW,GAAG,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAA;QACnD,IAAI,eAAe,GAAG,EAAE,CAAA;QAExB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,IAAI,CAAC,EAAE;YACvC,KAAgB,UAAY,EAAZ,KAAA,SAAS,CAAC,CAAC,CAAC,EAAZ,cAAY,EAAZ,IAAY,EAAE;gBAAzB,IAAI,GAAG,SAAA;gBACV,eAAe,CAAC,IAAI,OAApB,eAAe,EACV,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,gBAAgB,EAAE,CAAC,CAAC,EAC/C;aACF;YAED,KAAgB,UAAsB,EAAtB,KAAA,SAAS,CAAC,WAAW,CAAC,EAAtB,cAAsB,EAAtB,IAAsB,EAAE;gBAAnC,IAAI,GAAG,SAAA;gBACV,eAAe,CAAC,IAAI;gBAApB,eAAe,EACV,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,gBAAgB,EAAE,CAAC,CAAC,EAC/C;aACF;SACF;QAED,OAAO,eAAe,CAAA;KACvB;;;;;;IAOD,oCAAU,GAAV,UAAW,gBAA+C,EAAE,IAAe;QACzE,IAAI,WAAW,GAAG,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAA;QACnD,IAAI,eAAe,GAAG,EAAE,CAAA;QAExB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,IAAI,CAAC,EAAE;YACvC,KAAgB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;gBAAjB,IAAI,GAAG,aAAA;gBACV,eAAe,CAAC,IAAI,OAApB,eAAe,EACV,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,gBAAgB,EAAE,CAAC,CAAC,EAC/C;aACF;SACF;QAED,OAAO,eAAe,CAAA;KACvB;IAED,0CAAgB,GAAhB,UACE,gBAA+C;QAC/C,sBAA6C;aAA7C,UAA6C,EAA7C,qBAA6C,EAA7C,IAA6C;YAA7C,qCAA6C;;QAE7C,IAAI,WAAW,GAAG,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAA;QACnD,IAAI,iBAAiB,GAAG,EAAE,CAAA;QAC1B,IAAI,eAAe,GAAG,EAAE,CAAA;QACxB,IAAI,eAAe,GAAG,KAAK,CAAA;QAC3B,IAAI,OAAO,GAAG,KAAK,CAAA;QAEnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,IAAI,CAAC,EAAE;YACvC,IAAI,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,CAAA;YAEjC,IAAI,WAAW,EAAE;gBACf,eAAe,GAAG,IAAI,CAAA;gBAEtB,KAAgB,UAAgB,EAAhB,KAAA,WAAW,CAAC,IAAI,EAAhB,cAAgB,EAAhB,IAAgB,EAAE;oBAA7B,IAAI,GAAG,SAAA;oBACV,eAAe,CAAC,IAAI,OAApB,eAAe,EACV,IAAI,CAAC,YAAY,CAAC,GAAc,EAAE,gBAAgB,EAAE,CAAC,CAAC,EAC1D;iBACF;gBAED,QAAQ,CAAC,iBAAiB,EAAE,WAAW,CAAC,iBAAiB,CAAC,CAAA;gBAC1D,OAAO,GAAG,OAAO,IAAI,WAAW,CAAC,OAAO,CAAA;aACzC;YAED,IAAI,YAAY,CAAC,WAAW,CAAC,EAAE;gBAC7B,KAAgB,UAA8B,EAA9B,KAAA,YAAY,CAAC,WAAW,CAAC,CAAC,IAAI,EAA9B,cAA8B,EAA9B,IAA8B,EAAE;oBAA3C,IAAI,GAAG,SAAA;oBACV,eAAe,CAAC,IAAI,OAApB,eAAe,EACV,IAAI,CAAC,YAAY,CAAC,GAAc,EAAE,gBAAgB,EAAE,CAAC,CAAC,EAC1D;iBACF;aACF;SACF;QAED,IAAI,eAAe,EAAE;YACnB,OAAO;gBACL,iBAAiB,mBAAA;gBACjB,IAAI,EAAE,eAAe;gBACrB,OAAO,SAAA;aACR,CAAA;SACF;QAED,OAAO,IAAI,CAAA;KACZ;IAIH,sBAAC;AAAD,CAAC;;ACpID;;;;IAGuC,qCAAwB;IAA/D;;KA2BC;IA1BC,sCAAU,GAAV,UAAW,KAAqB;QACxB,IAAA,qBAAqB,GAAK,KAAK,sBAAV,CAAU;QAErC,IAAI,IAAI,GAAG,OAAO,CAChB,qBAAqB,CAAC,aAAa,CAAC,WAAW,EAC/C,UAAC,CAAC,IAAK,OAAA,qBAAqB,CAAC,SAAS,CAAC,CAAC,CAAC,GAAA,CACnC,CAAA;QAER,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAA;QAEb,OAAO,IAAI,CAAA;KACZ;IAED,8CAAkB,GAAlB,UAAmB,QAAkB;QACnC,OAAO,CAAC,QAAQ,CAAC,UAAU,IAAI,EAAE,CAAC,CAAA;KACnC;IAED,8CAAkB,GAAlB,UAAmB,QAAkB;QACnC,IAAI,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAA;QAEtC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YACvB,OAAO,CAAC,EAAE,CAAC,CAAA;SACZ;QAED,OAAO,WAAW,CAAA;KACnB;IACH,wBAAC;AAAD,CA3BA,CAAuC,QAAQ;;AC6B/C;;;SAGgB,gBAAgB,CAAC,aAA2B,EAAE,UAAoC;IAChG,OAAO,aAAa,CAAC,aAAa,EAAE,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC;SACjE,GAAG,CAAC,UAAC,IAAI,IAAK,OAAC,IAAqB,CAAC,QAAQ,GAAA,CAAC,CAAA;AACnD,CAAC;SAEe,aAAa,CAC3B,aAA2B,EAC3B,UAAuB,EACvB,UAAoC,EACpC,WAAoB,EACpB,UAAoC,EACpC,gBAAyB;IAEzB,IAAI,YAAY,GAAG,cAAc,CAAC,aAAa,EAAE,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,UAAU,EAAE,UAAU,CAAC,CAAA;IAC9F,IAAI,SAAS,GAAG,EAAE,CAAA;IAElB,YAAY,CAAC,YAAY,EAAE,SAAS,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,EAAE,UAAU,EAAE,gBAAgB,CAAC,CAAA;IAEvF,OAAO,SAAS,CAAA;AAClB,CAAC;AAED,SAAS,YAAY,CACnB,YAA0B,EAC1B,GAAG,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EACjC,UAAoC,EACpC,gBAAyB;IAEzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QAC/C,IAAI,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,CAAA;QACjC,IAAI,KAAK,GAAI,WAA+B,CAAC,KAAK,CAAA;QAElD,IAAI,KAAK,EAAE;YACT,IAAI,WAAW,EAAE;gBACf,IAAI,aAAa,GAAG,GAAG,CAAC,MAAM,CAAA;gBAC9B,IAAI,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAA;gBAElC,YAAY,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,EAAE,WAAW,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,gBAAgB,CAAC,CAAA;gBAE7G,IAAI,aAAa,GAAG,GAAG,CAAC,MAAM,EAAE;oBAC9B,IAAI,QAAQ,GAAG,GAAG,CAAC,aAAa,CAAC,CAAA;oBACjC,IAAI,aAAa,GAAG,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAA;oBAEjE,aAAa,CAAC,YAAY,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,aAAa,CAAA;iBACzD;aACF;iBAAM;gBACL,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,KAAK,CAAA;gBAC7C,IAAI,UAAU,GAAG,UAAU,CAAC,EAAE,CAAC,IAAI,IAAI,GAAG,UAAU,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAA;gBAE3E,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAA,EAAE,KAAK,OAAA,EAAE,UAAU,YAAA,EAAE,CAAC,CAAA;gBAEnC,IAAI,UAAU,EAAE;oBACd,YAAY,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,GAAG,CAAC,EAAE,UAAU,EAAE,gBAAgB,CAAC,CAAA;iBACxG;aACF;SACF;aAAM,IAAK,WAAkC,CAAC,QAAQ,EAAE;YACvD,IAAI,EAAE,GAAI,WAAkC,CAAC,QAAQ,CAAC,EAAE,CAAA;YACxD,IAAI,UAAU,GAAG,UAAU,CAAC,EAAE,CAAC,IAAI,IAAI,GAAG,UAAU,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAA;YAE3E,GAAG,CAAC,IAAI,CAAC;gBACP,EAAE,IAAA;gBACF,QAAQ,UAAA;gBACR,KAAK,OAAA;gBACL,UAAU,YAAA;gBACV,WAAW,EAAE,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC;gBACjD,QAAQ,EAAG,WAAkC,CAAC,QAAQ;gBACtD,cAAc,EAAG,WAAkC,CAAC,cAAc;aACnE,CAAC,CAAA;YAEF,IAAI,UAAU,EAAE;gBACd,YAAY,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,GAAG,CAAC,EAAE,UAAU,EAAE,gBAAgB,CAAC,CAAA;aACxG;SACF;KACF;AACH,CAAC;AAED,SAAS,cAAc,CACrB,aAA2B,EAC3B,QAAgB,EAChB,UAAuB,EACvB,UAAoC;IAEpC,IAAI,aAAa,GAAG,kBAAkB,CAAC,aAAa,EAAE,UAAU,CAAC,CAAA;IACjE,IAAI,UAAU,GAAiB,EAAE,CAAA;IAEjC,KAAK,IAAI,UAAU,IAAI,aAAa,EAAE;QACpC,IAAI,YAAY,GAAG,aAAa,CAAC,UAAU,CAAC,CAAA;QAE5C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE;YACnC,kBAAkB,CAAC,YAAY,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAA;SAClF;KACF;IAED,OAAO,UAAU,CAAA;AACnB,CAAC;AAED,SAAS,kBAAkB,CAAC,aAA2B,EAAE,UAAoC;IAC3F,IAAI,QAAQ,GAAqB,EAAE,CAAA;IAEnC,KAAK,IAAI,UAAU,IAAI,aAAa,EAAE;QACpC,IAAI,QAAQ,GAAG,aAAa,CAAC,UAAU,CAAC,CAAA;QAExC,QAAQ,CAAC,UAAU,CAAC,GAAG;YACrB,QAAQ,UAAA;YACR,cAAc,EAAE,mBAAmB,CAAC,QAAQ,CAAC;YAC7C,QAAQ,EAAE,EAAE;SACb,CAAA;KACF;IAED,KAAK,IAAI,UAAU,IAAI,aAAa,EAAE;QACpC,IAAI,QAAQ,GAAG,aAAa,CAAC,UAAU,CAAC,CAAA;QAExC,IAAI,QAAQ,CAAC,QAAQ,EAAE;YACrB,IAAI,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;YAE5C,IAAI,UAAU,EAAE;gBACd,4BAA4B,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAA;aACpF;SACF;KACF;IAED,OAAO,QAAQ,CAAA;AACjB,CAAC;AAED,SAAS,kBAAkB,CACzB,YAAgC,EAChC,KAAmB,EACnB,UAAuB,EACvB,KAAa,EACb,QAAgB,EAChB,UAAoC;IAEpC,IAAI,UAAU,CAAC,MAAM,KAAK,QAAQ,KAAK,CAAC,CAAC,IAAI,KAAK,IAAI,QAAQ,CAAC,EAAE;QAC/D,IAAI,SAAS,GAAG,gBAAgB,CAAC,YAAY,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAA;QAEpE,kBAAkB,CAAC,YAAY,EAAE,SAAS,CAAC,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAA;KAC3G;SAAM;QACL,4BAA4B,CAAC,YAAY,EAAE,KAAK,EAAE,UAAU,CAAC,CAAA;KAC9D;AACH,CAAC;AAED,SAAS,gBAAgB,CAAC,YAAgC,EAAE,KAAmB,EAAE,SAAoB;IACnG,IAAI,UAAU,GAAG,YAAY,CAAC,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;IAC7D,IAAI,SAAS,CAAA;IACb,IAAI,aAAa,CAAA;;IAGjB,IAAI,SAAS,CAAC,KAAK,EAAE;QACnB,KAAK,aAAa,GAAG,CAAC,EAAE,aAAa,GAAG,KAAK,CAAC,MAAM,EAAE,aAAa,IAAI,CAAC,EAAE;YACxE,IAAI,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC,CAAA;YAE/B,IAAK,IAAwB,CAAC,KAAK,EAAE;gBACnC,IAAI,GAAG,GAAG,eAAe,CAAC,UAAU,EAAG,IAAwB,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,KAAK,CAAA;gBAE9F,IAAI,GAAG,KAAK,CAAC,EAAE;oBACb,SAAS,GAAG,IAAI,CAAA;oBAChB,MAAK;iBACN;qBAAM,IAAI,GAAG,GAAG,CAAC,EAAE;oBAClB,MAAK;iBACN;aACF;SACF;KACF;SAAM;QACL,KAAK,aAAa,GAAG,CAAC,EAAE,aAAa,GAAG,KAAK,CAAC,MAAM,EAAE,aAAa,IAAI,CAAC,EAAE;YACxE,IAAI,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC,CAAA;YAE/B,IAAK,IAAwB,CAAC,KAAK,IAAI,UAAU,KAAM,IAAwB,CAAC,KAAK,CAAC,KAAK,EAAE;gBAC3F,SAAS,GAAG,IAAI,CAAA;gBAChB,MAAK;aACN;SACF;KACF;IAED,IAAI,CAAC,SAAS,EAAE;QACd,SAAS,GAAG;YACV,KAAK,EAAE;gBACL,KAAK,EAAE,UAAU;gBACjB,IAAI,EAAE,SAAS;aAChB;YACD,QAAQ,EAAE,EAAE;SACb,CAAA;QAED,KAAK,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,EAAE,SAAS,CAAC,CAAA;KAC1C;IAED,OAAO,SAAS,CAAA;AAClB,CAAC;AAED,SAAS,4BAA4B,CAAC,YAAY,EAAE,QAAQ,EAAE,UAAoC;IAChG,IAAI,CAAC,CAAA;IAEL,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QACvC,IAAI,GAAG,GAAG,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,YAAY,CAAC,cAAc,EAAE,UAAU,CAAC,CAAA;QAElG,IAAI,GAAG,GAAG,CAAC,EAAE;YACX,MAAK;SACN;KACF;IAED,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC,CAAA;AACrC,CAAC;SAEe,mBAAmB,CAAC,QAAkB;IACpD,IAAI,GAAG,kCAAQ,QAAQ,CAAC,aAAa,GAAK,QAAQ,CAAC,EAAE,GAAK,QAAQ,CAAE,CAAA;IAEpE,OAAO,GAAG,CAAC,EAAE,CAAA;IACb,OAAO,GAAG,CAAC,aAAa,CAAA;IAExB,OAAO,GAAG,CAAA;AACZ,CAAC;SAEe,aAAa,CAAC,MAAa,EAAE,MAAa;IACxD,OAAO,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,CAAA;AACrE;;AC9NA,WAAe,YAAY,CAAC;IAC1B,IAAI,EAAE;QACJ,mBAAmB;KACpB;IACD,QAAQ,EAAE;QACR,eAAe;KAChB;IACD,cAAc,EAAE;QACd,UAAC,KAAoB,IAAK,OAAA,KAAK,CAAC,cAAc,IAAI,KAAK,CAAC,cAAc,CAAC,UAAU,GAAA;KAClF;IACD,aAAa,EAAE,cAAc;IAC7B,oBAAoB,EAAE,CAAC,+BAA+B,CAAC;IACvD,uBAAuB,EAAE,CAAC,oBAAoB,CAAC;IAC/C,0BAA0B,EAAE,CAAC,wBAAwB,CAAC;IACtD,wBAAwB,EAAE,CAAC,qBAAqB,CAAC;IACjD,yBAAyB,EAAE,CAAC,0BAA0B,CAAC;IACvD,mBAAmB,EAAE,CAAC,kBAAkB,CAAC;IACzC,kBAAkB,EAAE,CAAC,iBAAiB,CAAC;IACvC,qBAAqB,EAAE,CAAC,iBAAiB,EAAE,wBAAwB,CAAC;IACpE,YAAY,EAAE,yBAAyB;IACvC,qBAAqB,EAAE,CAAC,oBAAoB,CAAC;IAC7C,qBAAqB,EAAE,CAAC,kBAAkB,CAAC;IAC3C,oBAAoB,sBAAA;IACpB,cAAc,EAAE,eAAe;IAC/B,gBAAgB,EAAE,iBAAiB;IACnC,eAAe,EAAE,EAAE,aAAa,EAAE,mBAAmB,EAAE;CACxD,CAAC;;;;;"}